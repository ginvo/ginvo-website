/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/_app"],{

/***/ "./node_modules/next-themes/dist/index.module.js":
/*!*******************************************************!*\
  !*** ./node_modules/next-themes/dist/index.module.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ThemeProvider\": function() { return /* binding */ $; },\n/* harmony export */   \"useTheme\": function() { return /* binding */ y; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nconst c=[\"light\",\"dark\"],i=\"(prefers-color-scheme: dark)\",d=\"undefined\"==typeof window,u=/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0),h={setTheme:e=>{},themes:[]},y=()=>{var e;return null!==(e=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(u))&&void 0!==e?e:h},$=r=>(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(u)?/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,r.children):/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(f,r),v=[\"light\",\"dark\"],f=({forcedTheme:t,disableTransitionOnChange:n=!1,enableSystem:l=!0,enableColorScheme:m=!0,storageKey:d=\"theme\",themes:h=v,defaultTheme:y=(l?\"system\":\"light\"),attribute:$=\"data-theme\",value:f,children:w,nonce:T})=>{const[E,k]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>S(d,y)),[C,L]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>S(d)),x=f?Object.values(f):h,I=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{let t=e;if(!t)return;\"system\"===e&&l&&(t=p());const r=f?f[t]:t,o=n?b():null,a=document.documentElement;if(\"class\"===$?(a.classList.remove(...x),r&&a.classList.add(r)):r?a.setAttribute($,r):a.removeAttribute($),m){const e=c.includes(y)?y:null,n=c.includes(t)?t:e;a.style.colorScheme=n}null==o||o()},[]),O=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{k(e);try{localStorage.setItem(d,e)}catch(e){}},[t]),M=(0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(e=>{const n=p(e);L(n),\"system\"===E&&l&&!t&&I(\"system\")},[E,t]);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{const e=window.matchMedia(i);return e.addListener(M),M(e),()=>e.removeListener(M)},[M]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{const e=e=>{e.key===d&&O(e.newValue||y)};return window.addEventListener(\"storage\",e),()=>window.removeEventListener(\"storage\",e)},[O]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{I(null!=t?t:E)},[t,E]);const A=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>({theme:E,setTheme:O,forcedTheme:t,resolvedTheme:\"system\"===E?C:E,themes:l?[...h,\"system\"]:h,systemTheme:l?C:void 0}),[E,O,t,C,l,h]);/*#__PURE__*/return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(u.Provider,{value:A},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(g,{forcedTheme:t,disableTransitionOnChange:n,enableSystem:l,enableColorScheme:m,storageKey:d,themes:h,defaultTheme:y,attribute:$,value:f,children:w,attrs:x,nonce:T}),w)},g=/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(({forcedTheme:t,storageKey:n,attribute:r,enableSystem:o,enableColorScheme:a,defaultTheme:s,value:l,attrs:m,nonce:d})=>{const u=\"system\"===s,h=\"class\"===r?`var d=document.documentElement,c=d.classList;c.remove(${m.map(e=>`'${e}'`).join(\",\")});`:`var d=document.documentElement,n='${r}',s='setAttribute';`,y=a?c.includes(s)&&s?`if(e==='light'||e==='dark'||!e)d.style.colorScheme=e||'${s}'`:\"if(e==='light'||e==='dark')d.style.colorScheme=e\":\"\",$=(e,t=!1,n=!0)=>{const o=l?l[e]:e,s=t?e+\"|| ''\":`'${o}'`;let m=\"\";return a&&n&&!t&&c.includes(e)&&(m+=`d.style.colorScheme = '${e}';`),\"class\"===r?m+=t||o?`c.add(${s})`:\"null\":o&&(m+=`d[s](n,${s})`),m},v=t?`!function(){${h}${$(t)}}()`:o?`!function(){try{${h}var e=localStorage.getItem('${n}');if('system'===e||(!e&&${u})){var t='${i}',m=window.matchMedia(t);if(m.media!==t||m.matches){${$(\"dark\")}}else{${$(\"light\")}}}else if(e){${l?`var x=${JSON.stringify(l)};`:\"\"}${$(l?\"x[e]\":\"e\",!0)}}${u?\"\":\"else{\"+$(s,!1,!1)+\"}\"}${y}}catch(e){}}()`:`!function(){try{${h}var e=localStorage.getItem('${n}');if(e){${l?`var x=${JSON.stringify(l)};`:\"\"}${$(l?\"x[e]\":\"e\",!0)}}else{${$(s,!1,!1)};}${y}}catch(t){}}();`;/*#__PURE__*/return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"script\",{nonce:d,dangerouslySetInnerHTML:{__html:v}})},()=>!0),S=(e,t)=>{if(d)return;let n;try{n=localStorage.getItem(e)||void 0}catch(e){}return n||t},b=()=>{const e=document.createElement(\"style\");return e.appendChild(document.createTextNode(\"*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}\")),document.head.appendChild(e),()=>{window.getComputedStyle(document.body),setTimeout(()=>{document.head.removeChild(e)},1)}},p=e=>(e||(e=window.matchMedia(i)),e.matches?\"dark\":\"light\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC10aGVtZXMvZGlzdC9pbmRleC5tb2R1bGUuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0SSxzR0FBc0csb0RBQUMsWUFBWSxjQUFjLFdBQVcsUUFBUSxNQUFNLGlCQUFpQixpREFBQyxxQkFBcUIsTUFBTSxpREFBQyxpQkFBaUIsMERBQWUsQ0FBQywyQ0FBQywrQkFBK0IsMERBQWUsNkJBQTZCLDhNQUE4TSxJQUFJLFdBQVcsK0NBQUMsbUJBQW1CLCtDQUFDLG9DQUFvQyxrREFBQyxLQUFLLFFBQVEsYUFBYSx5QkFBeUIseURBQXlELDhHQUE4RyxpREFBaUQsc0JBQXNCLGFBQWEsT0FBTyxrREFBQyxLQUFLLEtBQUssSUFBSSwwQkFBMEIsV0FBVyxRQUFRLGtEQUFDLEtBQUssYUFBYSxzQ0FBc0MsUUFBUSxnREFBQyxNQUFNLDZCQUE2QixxREFBcUQsTUFBTSxnREFBQyxNQUFNLFlBQVksNkJBQTZCLHdGQUF3RixNQUFNLGdEQUFDLE1BQU0sZUFBZSxRQUFRLFFBQVEsOENBQUMsT0FBTyxrSEFBa0gsaUJBQWlCLG9CQUFvQiwwREFBZSxhQUFhLFFBQVEsY0FBYywwREFBZSxJQUFJLGlLQUFpSyxLQUFLLGdCQUFnQiwyQ0FBQyxHQUFHLGlIQUFpSCxJQUFJLGlGQUFpRixXQUFXLGFBQWEsRUFBRSxjQUFjLEVBQUUsdUNBQXVDLEVBQUUsbUJBQW1CLGlGQUFpRixFQUFFLDJFQUEyRSxtQ0FBbUMsRUFBRSxHQUFHLFNBQVMsOERBQThELEVBQUUsRUFBRSxnQ0FBZ0MsRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtCQUFrQixFQUFFLEVBQUUsRUFBRSxNQUFNLG1CQUFtQixJQUFJLEVBQUUsRUFBRSw4QkFBOEIsRUFBRSxHQUFHLHdCQUF3QixFQUFFLEdBQUcsU0FBUyxFQUFFLHlCQUF5QiwyQkFBMkIsRUFBRSxXQUFXLEtBQUssRUFBRSxhQUFhLFdBQVcsRUFBRSxXQUFXLG1CQUFtQixLQUFLLEVBQUUsb0JBQW9CLEVBQUUsV0FBVyxlQUFlLEVBQUUsRUFBRSxHQUFHLFdBQVcsaUJBQWlCLElBQUksRUFBRSxFQUFFLDhCQUE4QixFQUFFLEdBQUcsTUFBTSxFQUFFLFdBQVcsbUJBQW1CLEtBQUssRUFBRSxvQkFBb0IsS0FBSyxFQUFFLGFBQWEsRUFBRSxHQUFHLFdBQVcsR0FBRyxFQUFFLG9CQUFvQiwwREFBZSxXQUFXLGlDQUFpQyxVQUFVLEVBQUUsbUJBQW1CLFlBQVksTUFBTSxJQUFJLGtDQUFrQyxVQUFVLFlBQVksUUFBUSx3Q0FBd0MsZ0RBQWdELGtDQUFrQywrQkFBK0IsNkJBQTZCLDhCQUE4QiwwQkFBMEIsc0NBQXNDLHVEQUF1RCw2QkFBNkIsS0FBSyw2REFBc0ciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQtdGhlbWVzL2Rpc3QvaW5kZXgubW9kdWxlLmpzP2Y0NjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGUse3VzZUNvbnRleHQgYXMgdCxGcmFnbWVudCBhcyBuLHVzZVN0YXRlIGFzIHIsdXNlQ2FsbGJhY2sgYXMgbyx1c2VFZmZlY3QgYXMgYSx1c2VNZW1vIGFzIHMsbWVtbyBhcyBsLGNyZWF0ZUNvbnRleHQgYXMgbX1mcm9tXCJyZWFjdFwiO2NvbnN0IGM9W1wibGlnaHRcIixcImRhcmtcIl0saT1cIihwcmVmZXJzLWNvbG9yLXNjaGVtZTogZGFyaylcIixkPVwidW5kZWZpbmVkXCI9PXR5cGVvZiB3aW5kb3csdT0vKiNfX1BVUkVfXyovbSh2b2lkIDApLGg9e3NldFRoZW1lOmU9Pnt9LHRoZW1lczpbXX0seT0oKT0+e3ZhciBlO3JldHVybiBudWxsIT09KGU9dCh1KSkmJnZvaWQgMCE9PWU/ZTpofSwkPXI9PnQodSk/LyojX19QVVJFX18qL2UuY3JlYXRlRWxlbWVudChuLG51bGwsci5jaGlsZHJlbik6LyojX19QVVJFX18qL2UuY3JlYXRlRWxlbWVudChmLHIpLHY9W1wibGlnaHRcIixcImRhcmtcIl0sZj0oe2ZvcmNlZFRoZW1lOnQsZGlzYWJsZVRyYW5zaXRpb25PbkNoYW5nZTpuPSExLGVuYWJsZVN5c3RlbTpsPSEwLGVuYWJsZUNvbG9yU2NoZW1lOm09ITAsc3RvcmFnZUtleTpkPVwidGhlbWVcIix0aGVtZXM6aD12LGRlZmF1bHRUaGVtZTp5PShsP1wic3lzdGVtXCI6XCJsaWdodFwiKSxhdHRyaWJ1dGU6JD1cImRhdGEtdGhlbWVcIix2YWx1ZTpmLGNoaWxkcmVuOncsbm9uY2U6VH0pPT57Y29uc3RbRSxrXT1yKCgpPT5TKGQseSkpLFtDLExdPXIoKCk9PlMoZCkpLHg9Zj9PYmplY3QudmFsdWVzKGYpOmgsST1vKGU9PntsZXQgdD1lO2lmKCF0KXJldHVybjtcInN5c3RlbVwiPT09ZSYmbCYmKHQ9cCgpKTtjb25zdCByPWY/Zlt0XTp0LG89bj9iKCk6bnVsbCxhPWRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtpZihcImNsYXNzXCI9PT0kPyhhLmNsYXNzTGlzdC5yZW1vdmUoLi4ueCksciYmYS5jbGFzc0xpc3QuYWRkKHIpKTpyP2Euc2V0QXR0cmlidXRlKCQscik6YS5yZW1vdmVBdHRyaWJ1dGUoJCksbSl7Y29uc3QgZT1jLmluY2x1ZGVzKHkpP3k6bnVsbCxuPWMuaW5jbHVkZXModCk/dDplO2Euc3R5bGUuY29sb3JTY2hlbWU9bn1udWxsPT1vfHxvKCl9LFtdKSxPPW8oZT0+e2soZSk7dHJ5e2xvY2FsU3RvcmFnZS5zZXRJdGVtKGQsZSl9Y2F0Y2goZSl7fX0sW3RdKSxNPW8oZT0+e2NvbnN0IG49cChlKTtMKG4pLFwic3lzdGVtXCI9PT1FJiZsJiYhdCYmSShcInN5c3RlbVwiKX0sW0UsdF0pO2EoKCk9Pntjb25zdCBlPXdpbmRvdy5tYXRjaE1lZGlhKGkpO3JldHVybiBlLmFkZExpc3RlbmVyKE0pLE0oZSksKCk9PmUucmVtb3ZlTGlzdGVuZXIoTSl9LFtNXSksYSgoKT0+e2NvbnN0IGU9ZT0+e2Uua2V5PT09ZCYmTyhlLm5ld1ZhbHVlfHx5KX07cmV0dXJuIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic3RvcmFnZVwiLGUpLCgpPT53aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN0b3JhZ2VcIixlKX0sW09dKSxhKCgpPT57SShudWxsIT10P3Q6RSl9LFt0LEVdKTtjb25zdCBBPXMoKCk9Pih7dGhlbWU6RSxzZXRUaGVtZTpPLGZvcmNlZFRoZW1lOnQscmVzb2x2ZWRUaGVtZTpcInN5c3RlbVwiPT09RT9DOkUsdGhlbWVzOmw/Wy4uLmgsXCJzeXN0ZW1cIl06aCxzeXN0ZW1UaGVtZTpsP0M6dm9pZCAwfSksW0UsTyx0LEMsbCxoXSk7LyojX19QVVJFX18qL3JldHVybiBlLmNyZWF0ZUVsZW1lbnQodS5Qcm92aWRlcix7dmFsdWU6QX0sLyojX19QVVJFX18qL2UuY3JlYXRlRWxlbWVudChnLHtmb3JjZWRUaGVtZTp0LGRpc2FibGVUcmFuc2l0aW9uT25DaGFuZ2U6bixlbmFibGVTeXN0ZW06bCxlbmFibGVDb2xvclNjaGVtZTptLHN0b3JhZ2VLZXk6ZCx0aGVtZXM6aCxkZWZhdWx0VGhlbWU6eSxhdHRyaWJ1dGU6JCx2YWx1ZTpmLGNoaWxkcmVuOncsYXR0cnM6eCxub25jZTpUfSksdyl9LGc9LyojX19QVVJFX18qL2woKHtmb3JjZWRUaGVtZTp0LHN0b3JhZ2VLZXk6bixhdHRyaWJ1dGU6cixlbmFibGVTeXN0ZW06byxlbmFibGVDb2xvclNjaGVtZTphLGRlZmF1bHRUaGVtZTpzLHZhbHVlOmwsYXR0cnM6bSxub25jZTpkfSk9Pntjb25zdCB1PVwic3lzdGVtXCI9PT1zLGg9XCJjbGFzc1wiPT09cj9gdmFyIGQ9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LGM9ZC5jbGFzc0xpc3Q7Yy5yZW1vdmUoJHttLm1hcChlPT5gJyR7ZX0nYCkuam9pbihcIixcIil9KTtgOmB2YXIgZD1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsbj0nJHtyfScscz0nc2V0QXR0cmlidXRlJztgLHk9YT9jLmluY2x1ZGVzKHMpJiZzP2BpZihlPT09J2xpZ2h0J3x8ZT09PSdkYXJrJ3x8IWUpZC5zdHlsZS5jb2xvclNjaGVtZT1lfHwnJHtzfSdgOlwiaWYoZT09PSdsaWdodCd8fGU9PT0nZGFyaycpZC5zdHlsZS5jb2xvclNjaGVtZT1lXCI6XCJcIiwkPShlLHQ9ITEsbj0hMCk9Pntjb25zdCBvPWw/bFtlXTplLHM9dD9lK1wifHwgJydcIjpgJyR7b30nYDtsZXQgbT1cIlwiO3JldHVybiBhJiZuJiYhdCYmYy5pbmNsdWRlcyhlKSYmKG0rPWBkLnN0eWxlLmNvbG9yU2NoZW1lID0gJyR7ZX0nO2ApLFwiY2xhc3NcIj09PXI/bSs9dHx8bz9gYy5hZGQoJHtzfSlgOlwibnVsbFwiOm8mJihtKz1gZFtzXShuLCR7c30pYCksbX0sdj10P2AhZnVuY3Rpb24oKXske2h9JHskKHQpfX0oKWA6bz9gIWZ1bmN0aW9uKCl7dHJ5eyR7aH12YXIgZT1sb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnJHtufScpO2lmKCdzeXN0ZW0nPT09ZXx8KCFlJiYke3V9KSl7dmFyIHQ9JyR7aX0nLG09d2luZG93Lm1hdGNoTWVkaWEodCk7aWYobS5tZWRpYSE9PXR8fG0ubWF0Y2hlcyl7JHskKFwiZGFya1wiKX19ZWxzZXskeyQoXCJsaWdodFwiKX19fWVsc2UgaWYoZSl7JHtsP2B2YXIgeD0ke0pTT04uc3RyaW5naWZ5KGwpfTtgOlwiXCJ9JHskKGw/XCJ4W2VdXCI6XCJlXCIsITApfX0ke3U/XCJcIjpcImVsc2V7XCIrJChzLCExLCExKStcIn1cIn0ke3l9fWNhdGNoKGUpe319KClgOmAhZnVuY3Rpb24oKXt0cnl7JHtofXZhciBlPWxvY2FsU3RvcmFnZS5nZXRJdGVtKCcke259Jyk7aWYoZSl7JHtsP2B2YXIgeD0ke0pTT04uc3RyaW5naWZ5KGwpfTtgOlwiXCJ9JHskKGw/XCJ4W2VdXCI6XCJlXCIsITApfX1lbHNleyR7JChzLCExLCExKX07fSR7eX19Y2F0Y2godCl7fX0oKTtgOy8qI19fUFVSRV9fKi9yZXR1cm4gZS5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIse25vbmNlOmQsZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6e19faHRtbDp2fX0pfSwoKT0+ITApLFM9KGUsdCk9PntpZihkKXJldHVybjtsZXQgbjt0cnl7bj1sb2NhbFN0b3JhZ2UuZ2V0SXRlbShlKXx8dm9pZCAwfWNhdGNoKGUpe31yZXR1cm4gbnx8dH0sYj0oKT0+e2NvbnN0IGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO3JldHVybiBlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiKnstd2Via2l0LXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7LW1vei10cmFuc2l0aW9uOm5vbmUhaW1wb3J0YW50Oy1vLXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7LW1zLXRyYW5zaXRpb246bm9uZSFpbXBvcnRhbnQ7dHJhbnNpdGlvbjpub25lIWltcG9ydGFudH1cIikpLGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZSksKCk9Pnt3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShkb2N1bWVudC5ib2R5KSxzZXRUaW1lb3V0KCgpPT57ZG9jdW1lbnQuaGVhZC5yZW1vdmVDaGlsZChlKX0sMSl9fSxwPWU9PihlfHwoZT13aW5kb3cubWF0Y2hNZWRpYShpKSksZS5tYXRjaGVzP1wiZGFya1wiOlwibGlnaHRcIik7ZXhwb3J0eyQgYXMgVGhlbWVQcm92aWRlcix5IGFzIHVzZVRoZW1lfTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next-themes/dist/index.module.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./styles/main.sass":
/*!********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./styles/main.sass ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\n/* harmony import */ var _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_next_dist_build_webpack_loaders_css_loader_src_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@import 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap';\\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\\n/* Document\\n   ========================================================================== */\\n/**\\n * 1. Correct the line height in all browsers.\\n * 2. Prevent adjustments of font size after orientation changes in iOS.\\n */\\nhtml {\\n  line-height: 1.15; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/* Sections\\n   ========================================================================== */\\n/**\\n * Remove the margin in all browsers.\\n */\\nbody {\\n  margin: 0;\\n}\\n\\n/**\\n * Render the `main` element consistently in IE.\\n */\\nmain {\\n  display: block;\\n}\\n\\n/**\\n * Correct the font size and margin on `h1` elements within `section` and\\n * `article` contexts in Chrome, Firefox, and Safari.\\n */\\nh1 {\\n  font-size: 2em;\\n  margin: 0.67em 0;\\n}\\n\\n/* Grouping content\\n   ========================================================================== */\\n/**\\n * 1. Add the correct box sizing in Firefox.\\n * 2. Show the overflow in Edge and IE.\\n */\\nhr {\\n  box-sizing: content-box; /* 1 */\\n  height: 0; /* 1 */\\n  overflow: visible; /* 2 */\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\npre {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/* Text-level semantics\\n   ========================================================================== */\\n/**\\n * Remove the gray background on active links in IE 10.\\n */\\na {\\n  background-color: transparent;\\n}\\n\\n/**\\n * 1. Remove the bottom border in Chrome 57-\\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\n */\\nabbr[title] {\\n  border-bottom: none; /* 1 */\\n  text-decoration: underline; /* 2 */\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted; /* 2 */\\n}\\n\\n/**\\n * Add the correct font weight in Chrome, Edge, and Safari.\\n */\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\ncode,\\nkbd,\\nsamp {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/**\\n * Add the correct font size in all browsers.\\n */\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/**\\n * Prevent `sub` and `sup` elements from affecting the line height in\\n * all browsers.\\n */\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/* Embedded content\\n   ========================================================================== */\\n/**\\n * Remove the border on images inside links in IE 10.\\n */\\nimg {\\n  border-style: none;\\n}\\n\\n/* Forms\\n   ========================================================================== */\\n/**\\n * 1. Change the font styles in all browsers.\\n * 2. Remove the margin in Firefox and Safari.\\n */\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  line-height: 1.15; /* 1 */\\n  margin: 0; /* 2 */\\n}\\n\\n/**\\n * Show the overflow in IE.\\n * 1. Show the overflow in Edge.\\n */\\nbutton,\\ninput { /* 1 */\\n  overflow: visible;\\n}\\n\\n/**\\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\\n * 1. Remove the inheritance of text transform in Firefox.\\n */\\nbutton,\\nselect { /* 1 */\\n  text-transform: none;\\n}\\n\\n/**\\n * Correct the inability to style clickable types in iOS and Safari.\\n */\\nbutton,\\n[type=button],\\n[type=reset],\\n[type=submit] {\\n  -webkit-appearance: button;\\n}\\n\\n/**\\n * Remove the inner border and padding in Firefox.\\n */\\nbutton::-moz-focus-inner,\\n[type=button]::-moz-focus-inner,\\n[type=reset]::-moz-focus-inner,\\n[type=submit]::-moz-focus-inner {\\n  border-style: none;\\n  padding: 0;\\n}\\n\\n/**\\n * Restore the focus styles unset by the previous rule.\\n */\\nbutton:-moz-focusring,\\n[type=button]:-moz-focusring,\\n[type=reset]:-moz-focusring,\\n[type=submit]:-moz-focusring {\\n  outline: 1px dotted ButtonText;\\n}\\n\\n/**\\n * Correct the padding in Firefox.\\n */\\nfieldset {\\n  padding: 0.35em 0.75em 0.625em;\\n}\\n\\n/**\\n * 1. Correct the text wrapping in Edge and IE.\\n * 2. Correct the color inheritance from `fieldset` elements in IE.\\n * 3. Remove the padding so developers are not caught out when they zero out\\n *    `fieldset` elements in all browsers.\\n */\\nlegend {\\n  box-sizing: border-box; /* 1 */\\n  color: inherit; /* 2 */\\n  display: table; /* 1 */\\n  max-width: 100%; /* 1 */\\n  padding: 0; /* 3 */\\n  white-space: normal; /* 1 */\\n}\\n\\n/**\\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n */\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/**\\n * Remove the default vertical scrollbar in IE 10+.\\n */\\ntextarea {\\n  overflow: auto;\\n}\\n\\n/**\\n * 1. Add the correct box sizing in IE 10.\\n * 2. Remove the padding in IE 10.\\n */\\n[type=checkbox],\\n[type=radio] {\\n  box-sizing: border-box; /* 1 */\\n  padding: 0; /* 2 */\\n}\\n\\n/**\\n * Correct the cursor style of increment and decrement buttons in Chrome.\\n */\\n[type=number]::-webkit-inner-spin-button,\\n[type=number]::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/**\\n * 1. Correct the odd appearance in Chrome and Safari.\\n * 2. Correct the outline style in Safari.\\n */\\n[type=search] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/**\\n * Remove the inner padding in Chrome and Safari on macOS.\\n */\\n[type=search]::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/**\\n * 1. Correct the inability to style clickable types in iOS and Safari.\\n * 2. Change font properties to `inherit` in Safari.\\n */\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/* Interactive\\n   ========================================================================== */\\n/*\\n * Add the correct display in Edge, IE 10+, and Firefox.\\n */\\ndetails {\\n  display: block;\\n}\\n\\n/*\\n * Add the correct display in all browsers.\\n */\\nsummary {\\n  display: list-item;\\n}\\n\\n/* Misc\\n   ========================================================================== */\\n/**\\n * Add the correct display in IE 10+.\\n */\\ntemplate {\\n  display: none;\\n}\\n\\n/**\\n * Add the correct display in IE 10.\\n */\\n[hidden] {\\n  display: none;\\n}\\n\\n[data-theme=light] {\\n  --background-color: #FBFBFC;\\n  --background-section: #FBFBFC;\\n  --background-button-cta: #FFFFFF;\\n  --background-button-cta-hover: rgba(255, 255, 255, 0.8);\\n  --background-button-side: rgba(255, 255, 255, 0.1);\\n  --background-button-side-hover: rgba(255, 255, 255, 0.3);\\n  --color-text-cta: transparent;\\n  --color-text-title: #101014;\\n  --color-text-title-high: #5E5CE5;\\n  --color-text-body: #5D87A8;\\n  --color-text-link: rgba(255, 255, 255, 0.65);\\n  --color-text-link-hover: #FFFFFF;\\n  --border: rgba(255, 255, 255, 0.1);\\n  --icon: #FFFFFF;\\n  --icon-box: rgba(255, 255, 255, 0.1);\\n  --icon-box-hover: rgba(255, 255, 255, 0.3);\\n}\\n\\n[data-theme=dark] {\\n  --background-color: #101014;\\n  --background-section: #1B1E26;\\n  --background-button-cta: #5E5CE5;\\n  --background-button-cta-hover: #5E5CE5;\\n  --background-button-side: #1B1E26;\\n  --background-button-side-hover: #2B2F3B;\\n  --color-text-cta: #FFFFFF;\\n  --color-text-title: #FFFFFF;\\n  --color-text-title-high: #5E5CE5;\\n  --color-text-body: #A1A3AA;\\n  --color-text-link: #8181A1;\\n  --color-text-link-hover: #5E5CE5;\\n  --border: rgba(255, 255, 255, 0.1);\\n  --icon: #8181A1;\\n  --icon-box: #1B1E26;\\n  --icon-box-hover: #2B2F3B;\\n}\\n\\n/*\\t======================================================================================\\n * 2.\\tMixins\\n * Utilitaries mixins for different cases and save code */\\nhtml {\\n  transition: 0.5s;\\n  scroll-behavior: smooth;\\n}\\n\\nbody {\\n  padding: 0;\\n  margin: 0 auto;\\n}\\n\\nul, figure, p, h1 {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\na {\\n  text-decoration: none;\\n}\\n\\nbutton {\\n  cursor: pointer;\\n  border-width: 0;\\n  border-style: none;\\n  border-color: transparent;\\n  box-sizing: content-box;\\n}\\nbutton:focus {\\n  outline: none;\\n}\\n\\nh1 {\\n  font-size: 90px;\\n  font-weight: 800;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  h1 {\\n    font-size: 75px;\\n  }\\n}\\n@media (max-width: 768px) {\\n  h1 {\\n    font-size: 50px;\\n    line-height: 1.2em;\\n  }\\n}\\n\\nh2 {\\n  font-size: 64px;\\n  font-weight: 700;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  h2 {\\n    font-size: 50px;\\n  }\\n}\\n\\nh3 {\\n  margin: 0;\\n  font-size: 32px;\\n  font-weight: 700;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  h3 {\\n    font-size: 20px;\\n  }\\n}\\n\\n.layout {\\n  margin: 0 auto;\\n  padding: 0 40px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-size: 14px;\\n  color: var(--color-text-body);\\n  max-width: 1280px;\\n}\\n@media (max-width: 768px) {\\n  .layout {\\n    padding: 0 16px;\\n  }\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n.space {\\n  height: 40px;\\n}\\n\\n.pill-sky {\\n  padding: 0.5em 1em;\\n  background-color: hsl(208, 90%, 96%);\\n  color: hsl(207, 100%, 63%);\\n  border-radius: 2em;\\n}\\n.pill-sky p {\\n  font-size: 0.86rem;\\n  line-height: 1.3;\\n}\\n\\n.button-icon-box {\\n  width: 40px;\\n  height: 40px;\\n  background-color: var(--icon-box);\\n  cursor: pointer;\\n}\\n.button-icon-box:hover {\\n  background-color: var(--icon-box-hover);\\n  transition: 0.5s;\\n}\\n.button-icon-box a {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n.button-icon-box a > svg path {\\n  fill: var(--icon);\\n}\\n.button-icon-box a .icon-color-purp path {\\n  fill: #F206B0;\\n}\\n\\n.background-main {\\n  background-color: var(--background-color);\\n}\\n\\n/*  ======================================================================================\\n *  1.  Design Tokens\\n *      Set up for atomic elements from design kit as variables */\\n.header-main-content {\\n  width: auto;\\n  display: grid;\\n  grid-template-columns: 1fr auto 1fr;\\n  align-items: center;\\n  padding: 1.7em 0;\\n}\\n@media (max-width: 768px) {\\n  .header-main-content {\\n    grid-template-columns: 1fr auto;\\n  }\\n}\\n\\n.group-logo {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.header-main-nav {\\n  height: 100%;\\n}\\n.header-main-nav ul {\\n  height: 100%;\\n  display: grid;\\n  grid-auto-flow: column;\\n  grid-column-gap: 2.2em;\\n  column-gap: 2.2em;\\n}\\n.header-main-nav ul li {\\n  display: inline-block;\\n  height: 100%;\\n}\\n.header-main-nav ul li a {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  align-items: center;\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.5em;\\n  color: var(--color-text-link);\\n}\\n.header-main-nav ul li a:hover {\\n  color: var(--color-text-link-hover);\\n  transition: 0.5s;\\n}\\n@media (max-width: 768px) {\\n  .header-main-nav {\\n    display: none;\\n  }\\n}\\n\\n.header-group-icons {\\n  display: grid;\\n  grid-auto-flow: column;\\n  justify-content: end;\\n  grid-column-gap: 2.2em;\\n  column-gap: 2.2em;\\n}\\n@media (max-width: 768px) {\\n  .header-group-icons :nth-child(1).button-icon-box {\\n    display: none;\\n  }\\n}\\n\\n.logo {\\n  font-size: 20px;\\n  font-weight: 400;\\n  letter-spacing: -0.04em;\\n}\\n.logo a {\\n  color: #101014;\\n}\\n\\n.icon-link-box {\\n  width: 24px;\\n  height: 24px;\\n}\\n.icon-link-box a {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.icon-grey-to-purp a svg {\\n  fill: #5D87A8;\\n}\\n.icon-grey-to-purp a:hover svg {\\n  fill: #5E5CE5;\\n  transition: 0.5s;\\n}\\n\\n.hero-content {\\n  width: 100%;\\n  padding: 10em 0;\\n  display: grid;\\n  grid-auto-flow: row;\\n  grid-row-gap: 6em;\\n  row-gap: 6em;\\n  justify-items: center;\\n}\\n@media (max-width: 425px) {\\n  .hero-content {\\n    margin-top: 2em;\\n  }\\n}\\n\\n.hero-group-texts {\\n  text-align: center;\\n  display: grid;\\n  grid-auto-flow: row;\\n  grid-row-gap: 3em;\\n  row-gap: 3em;\\n}\\n\\n.hero-group-buttons {\\n  display: grid;\\n  grid-auto-flow: column;\\n  grid-column-gap: 0.75em;\\n  column-gap: 0.75em;\\n}\\n@media (max-width: 425px) {\\n  .hero-group-buttons {\\n    width: 100%;\\n    grid-auto-flow: row;\\n    row-gap: 0.75em;\\n  }\\n}\\n\\n.hero-title {\\n  margin: 0 auto;\\n  color: var(--color-text-title);\\n  font-size: 90px;\\n  font-weight: 800;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  .hero-title {\\n    font-size: 75px;\\n  }\\n}\\n@media (max-width: 768px) {\\n  .hero-title {\\n    font-size: 50px;\\n    line-height: 1.2em;\\n  }\\n}\\n.hero-title-color {\\n  color: var(--color-text-title-high);\\n}\\n@media (max-width: 425px) {\\n  .hero-title {\\n    font-size: 24px;\\n    font-weight: 700;\\n    font-style: normal;\\n    line-height: 1.15em;\\n    letter-spacing: -0.04em;\\n  }\\n}\\n\\n.hero-description {\\n  max-width: 520px;\\n  margin: 0 auto;\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  color: var(--color-text-body-bg);\\n}\\n@media (max-width: 425px) {\\n  .hero-description {\\n    max-width: 260px;\\n  }\\n}\\n\\n.button {\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.5em;\\n  text-align: center;\\n  padding: 1.15rem 2.85rem;\\n  border-radius: 0.7rem;\\n  display: block;\\n  margin: 0 auto;\\n}\\n@media (max-width: 425px) {\\n  .button {\\n    font-size: 14px;\\n    font-weight: 400;\\n    font-style: normal;\\n    line-height: 1.5em;\\n    padding: 0.85em 1.3em;\\n    min-width: 144px;\\n  }\\n}\\n.button:hover {\\n  transition: 0.5s;\\n}\\n.button-cta {\\n  background: var(--background-button-cta);\\n}\\n.button-cta:hover {\\n  background: var(--background-button-cta-hover);\\n}\\n.button-cta-text {\\n  color: var(--color-text-cta);\\n}\\n.button-side {\\n  background: var(--background-button-side);\\n  color: #FFFFFF;\\n}\\n.button-side:hover {\\n  background: var(--background-button-side-hover);\\n}\\n\\n.feature-content {\\n  background: var(--background-section);\\n  width: 324px;\\n  display: grid;\\n  grid-auto-flow: row;\\n  border-radius: 10px;\\n}\\n@media (max-width: 768px) {\\n  .feature-content {\\n    grid-auto-flow: row;\\n    row-gap: 16px;\\n    justify-items: center;\\n  }\\n}\\n\\n.icon-box {\\n  width: 70px;\\n  height: 70px;\\n  background-color: #FFFFFF;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n@media (max-width: 425px) {\\n  .icon-box {\\n    width: 50px;\\n    height: 50px;\\n  }\\n}\\n.icon-box svg {\\n  width: 36px;\\n  height: auto;\\n}\\n@media (max-width: 425px) {\\n  .icon-box svg {\\n    width: 25px;\\n  }\\n}\\n.icon-box svg path {\\n  fill: #FFFFFF;\\n}\\n\\n.feature-group-texts {\\n  text-align: left;\\n  display: grid;\\n  grid-auto-flow: row;\\n  grid-row-gap: 4px;\\n  row-gap: 4px;\\n  padding: 24px;\\n}\\n@media (max-width: 768px) {\\n  .feature-group-texts {\\n    text-align: center;\\n  }\\n}\\n\\n.feature-title {\\n  color: var(--color-text-title);\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  font-weight: 500;\\n}\\n@media (max-width: 425px) {\\n  .feature-title {\\n    font-size: 18px;\\n    font-weight: 700;\\n    font-style: normal;\\n    line-height: 1.15em;\\n    letter-spacing: -0.04em;\\n  }\\n}\\n\\n.feature-description {\\n  font-size: 14px;\\n  font-weight: 300;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  color: var(--color-text-body);\\n}\\n@media (max-width: 768px) {\\n  .feature-description {\\n    margin: 0 auto;\\n    max-width: 180px;\\n  }\\n}\\n\\n.section-container {\\n  display: grid;\\n  grid-auto-flow: row;\\n  grid-row-gap: 40px;\\n  row-gap: 40px;\\n  padding: 120px 0;\\n  border-radius: 40px;\\n}\\n@media (max-width: 768px) {\\n  .section-container {\\n    border-radius: 20px 20px 0 0;\\n    padding: 56px 0;\\n    row-gap: 56px;\\n  }\\n}\\n.section-container-background {\\n  background: var(--background-section);\\n  border: 1px solid var(--border);\\n}\\n\\n.section-group-texts {\\n  text-align: center;\\n  display: grid;\\n  grid-auto-flow: row;\\n  grid-row-gap: 16px;\\n  row-gap: 16px;\\n}\\n\\n.section-title {\\n  color: var(--color-text-title);\\n  margin: 0 auto;\\n  font-size: 64px;\\n  font-weight: 700;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n.section-title-color {\\n  color: var(--color-text-title);\\n}\\n@media (max-width: 1024px) {\\n  .section-title {\\n    font-size: 50px;\\n  }\\n}\\n@media (max-width: 425px) {\\n  .section-title {\\n    font-size: 20px;\\n    font-weight: 700;\\n    font-style: normal;\\n    line-height: 1.15em;\\n    letter-spacing: -0.04em;\\n  }\\n}\\n\\n.section-description {\\n  margin: 0 auto;\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  color: var(--color-text-body);\\n}\\n@media (max-width: 425px) {\\n  .section-description {\\n    max-width: 260px;\\n  }\\n}\\n\\n.features-group {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(324px, 1fr));\\n  grid-row-gap: 120px;\\n  row-gap: 120px;\\n  justify-items: center;\\n  padding: 0 64px;\\n}\\n@media (max-width: 768px) {\\n  .features-group {\\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\\n    row-gap: 56px;\\n    padding: 0;\\n  }\\n}\\n.features-group :nth-child(1) .icon-box {\\n  background-color: #F0DCFF;\\n}\\n.features-group :nth-child(1) .icon-box > svg path {\\n  fill: #AF48FF;\\n}\\n.features-group :nth-child(2) .icon-box {\\n  background-color: #D7DEF7;\\n}\\n.features-group :nth-child(2) .icon-box > svg path {\\n  fill: #5460FE;\\n}\\n.features-group :nth-child(3) .icon-box {\\n  background-color: #FFEADE;\\n}\\n.features-group :nth-child(3) .icon-box > svg path {\\n  fill: #FF612F;\\n}\\n.features-group :nth-child(4) .icon-box {\\n  background-color: #FFE4E4;\\n}\\n.features-group :nth-child(4) .icon-box > svg path {\\n  fill: #FF3F3F;\\n}\\n.features-group :nth-child(5) .icon-box {\\n  background-color: #D8EDFF;\\n}\\n.features-group :nth-child(5) .icon-box > svg path {\\n  fill: #40AAFF;\\n}\\n.features-group :nth-child(6) .icon-box {\\n  background-color: #DDF3E6;\\n}\\n.features-group :nth-child(6) .icon-box > svg path {\\n  fill: #4CCC81;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/tokens/_fonts.sass\",\"webpack://styles/normalize.scss\",\"webpack://styles/main.sass\",\"webpack://styles/tokens/_colors.sass\",\"webpack://styles/tokens/_mixins.sass\",\"webpack://styles/tokens/_reset.sass\",\"webpack://styles/tokens/_animations.sass\",\"webpack://styles/tokens/_breakpoints.sass\",\"webpack://styles/tokens/_global.sass\",\"webpack://styles/tokens/_backgrounds.sass\",\"webpack://styles/tokens/_index.sass\",\"webpack://components/header-main/header-main-style.sass\",\"webpack://components/hero/_hero-style.sass\",\"webpack://components/button/_button-style.sass\",\"webpack://components/feature/_feature-style.sass\",\"webpack://components/section/_section-style.sass\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@use 'colors' as *\\n@use 'breakpoints' as *\\n\\n//\\t==========================================================================\\n\\tDesign Tokens - Set up for atomic elements from design kit as variables\\n\\n//\\tFonts Variables\\n\\n//\\tPoppins font from Google\\n@import 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap'\\n\\n$font: 'Poppins', sans-serif\\n$font-size-base: 14px\\n$font-ultrablack: 900\\n$font-black: 800\\n$font-bold: 700\\n$font-semibold: 500\\n$font-medium: 400\\n$font-regular: 300\\n$font-light: 200\\n$font-size-16px: 1.15rem\\n$font-size-18px: 18px\\n$font-size-20px: 20px\\n$font-size-24px: 24px\\n$font-size-40px: 3rem\\n$font-size-30px: 2.5rem\\n$font-size-32px: 32px\\n$font-size-50px: 3.6rem\\n$font-size-64px: 64px\\n$font-size-12px: .86rem\\n$font-size-90px: 90px\\n\\n@mixin typography-style\\n\\tfont-family: $font\\n\\tfont-size: $font-size-base\\n\\tcolor: var(--color-text-body)\\n\\n@mixin text-style-h1\\n\\tfont-size: $font-size-90px\\n\\tfont-weight: $font-black\\n\\tfont-style: normal\\n\\tline-height: 1.15em\\n\\tletter-spacing: -.04em\\n\\t+breakpoint-laptop\\n\\t\\tfont-size: 75px\\n\\t+breakpoint-tablet\\n\\t\\tfont-size: 50px\\n\\t\\tline-height: 1.2em\\n\\n@mixin text-style-h1-small\\n\\tfont-size: $font-size-24px\\n\\tfont-weight: $font-bold\\n\\tfont-style: normal\\n\\tline-height: 1.15em\\n\\tletter-spacing: -.04em\\n\\n@mixin text-style-h2\\n\\tfont-size: $font-size-64px\\n\\tfont-weight: $font-bold\\n\\tfont-style: normal\\n\\tline-height: 1.15em\\n\\tletter-spacing: -.04em\\n\\t+breakpoint-laptop\\n\\t\\tfont-size: 50px\\n\\n@mixin text-style-h2-small\\n\\tfont-size: $font-size-20px\\n\\tfont-weight: $font-bold\\n\\tfont-style: normal\\n\\tline-height: 1.15em\\n\\tletter-spacing: -.04em\\n\\n@mixin text-style-title\\n\\tfont-size: $font-size-32px\\n\\tfont-weight: $font-bold\\n\\tfont-style: normal\\n\\tline-height: 1.15em\\n\\tletter-spacing: -.04em\\n\\t+breakpoint-laptop\\n\\t\\tfont-size: 20px\\n\\n@mixin text-style-title-small\\n\\tfont-size: $font-size-18px\\n\\tfont-weight: $font-bold\\n\\tfont-style: normal\\n\\tline-height: 1.15em\\n\\tletter-spacing: -.04em\\n\\n@mixin text-style-body\\n\\tfont-size: $font-size-18px\\n\\tfont-weight: $font-medium\\n\\tfont-style: normal\\n\\tline-height: 1.6em\\n\\t// description\\n\\n@mixin text-style-buttons\\n\\tfont-size: $font-size-18px\\n\\tfont-weight: $font-medium\\n\\tfont-style: normal\\n\\tline-height: 1.5em\\n\\n@mixin text-style-buttons-small\\n\\tfont-size: $font-size-base\\n\\tfont-weight: $font-medium\\n\\tfont-style: normal\\n\\tline-height: 1.5em\\n\\n@mixin text-style-menu\\n\\tfont-size: $font-size-18px\\n\\tfont-weight: $font-medium\\n\\tfont-style: normal\\n\\tline-height: 1.5em\\n\\n@mixin text-style-note\\n\\tfont-size: $font-size-base\\n\\tfont-weight: $font-regular\\n\\tfont-style: normal\\n\\tline-height: 1.6em\",\"/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\\n\\n/* Document\\n   ========================================================================== */\\n\\n/**\\n * 1. Correct the line height in all browsers.\\n * 2. Prevent adjustments of font size after orientation changes in iOS.\\n */\\n\\nhtml {\\n  line-height: 1.15; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/* Sections\\n   ========================================================================== */\\n\\n/**\\n * Remove the margin in all browsers.\\n */\\n\\nbody {\\n  margin: 0;\\n}\\n\\n/**\\n * Render the `main` element consistently in IE.\\n */\\n\\nmain {\\n  display: block;\\n}\\n\\n/**\\n * Correct the font size and margin on `h1` elements within `section` and\\n * `article` contexts in Chrome, Firefox, and Safari.\\n */\\n\\nh1 {\\n  font-size: 2em;\\n  margin: 0.67em 0;\\n}\\n\\n/* Grouping content\\n   ========================================================================== */\\n\\n/**\\n * 1. Add the correct box sizing in Firefox.\\n * 2. Show the overflow in Edge and IE.\\n */\\n\\nhr {\\n  box-sizing: content-box; /* 1 */\\n  height: 0; /* 1 */\\n  overflow: visible; /* 2 */\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\npre {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/* Text-level semantics\\n   ========================================================================== */\\n\\n/**\\n * Remove the gray background on active links in IE 10.\\n */\\n\\na {\\n  background-color: transparent;\\n}\\n\\n/**\\n * 1. Remove the bottom border in Chrome 57-\\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\n */\\n\\nabbr[title] {\\n  border-bottom: none; /* 1 */\\n  text-decoration: underline; /* 2 */\\n  text-decoration: underline dotted; /* 2 */\\n}\\n\\n/**\\n * Add the correct font weight in Chrome, Edge, and Safari.\\n */\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\n\\ncode,\\nkbd,\\nsamp {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/**\\n * Add the correct font size in all browsers.\\n */\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/**\\n * Prevent `sub` and `sup` elements from affecting the line height in\\n * all browsers.\\n */\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/* Embedded content\\n   ========================================================================== */\\n\\n/**\\n * Remove the border on images inside links in IE 10.\\n */\\n\\nimg {\\n  border-style: none;\\n}\\n\\n/* Forms\\n   ========================================================================== */\\n\\n/**\\n * 1. Change the font styles in all browsers.\\n * 2. Remove the margin in Firefox and Safari.\\n */\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  line-height: 1.15; /* 1 */\\n  margin: 0; /* 2 */\\n}\\n\\n/**\\n * Show the overflow in IE.\\n * 1. Show the overflow in Edge.\\n */\\n\\nbutton,\\ninput { /* 1 */\\n  overflow: visible;\\n}\\n\\n/**\\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\\n * 1. Remove the inheritance of text transform in Firefox.\\n */\\n\\nbutton,\\nselect { /* 1 */\\n  text-transform: none;\\n}\\n\\n/**\\n * Correct the inability to style clickable types in iOS and Safari.\\n */\\n\\nbutton,\\n[type=\\\"button\\\"],\\n[type=\\\"reset\\\"],\\n[type=\\\"submit\\\"] {\\n  -webkit-appearance: button;\\n}\\n\\n/**\\n * Remove the inner border and padding in Firefox.\\n */\\n\\nbutton::-moz-focus-inner,\\n[type=\\\"button\\\"]::-moz-focus-inner,\\n[type=\\\"reset\\\"]::-moz-focus-inner,\\n[type=\\\"submit\\\"]::-moz-focus-inner {\\n  border-style: none;\\n  padding: 0;\\n}\\n\\n/**\\n * Restore the focus styles unset by the previous rule.\\n */\\n\\nbutton:-moz-focusring,\\n[type=\\\"button\\\"]:-moz-focusring,\\n[type=\\\"reset\\\"]:-moz-focusring,\\n[type=\\\"submit\\\"]:-moz-focusring {\\n  outline: 1px dotted ButtonText;\\n}\\n\\n/**\\n * Correct the padding in Firefox.\\n */\\n\\nfieldset {\\n  padding: 0.35em 0.75em 0.625em;\\n}\\n\\n/**\\n * 1. Correct the text wrapping in Edge and IE.\\n * 2. Correct the color inheritance from `fieldset` elements in IE.\\n * 3. Remove the padding so developers are not caught out when they zero out\\n *    `fieldset` elements in all browsers.\\n */\\n\\nlegend {\\n  box-sizing: border-box; /* 1 */\\n  color: inherit; /* 2 */\\n  display: table; /* 1 */\\n  max-width: 100%; /* 1 */\\n  padding: 0; /* 3 */\\n  white-space: normal; /* 1 */\\n}\\n\\n/**\\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n */\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/**\\n * Remove the default vertical scrollbar in IE 10+.\\n */\\n\\ntextarea {\\n  overflow: auto;\\n}\\n\\n/**\\n * 1. Add the correct box sizing in IE 10.\\n * 2. Remove the padding in IE 10.\\n */\\n\\n[type=\\\"checkbox\\\"],\\n[type=\\\"radio\\\"] {\\n  box-sizing: border-box; /* 1 */\\n  padding: 0; /* 2 */\\n}\\n\\n/**\\n * Correct the cursor style of increment and decrement buttons in Chrome.\\n */\\n\\n[type=\\\"number\\\"]::-webkit-inner-spin-button,\\n[type=\\\"number\\\"]::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/**\\n * 1. Correct the odd appearance in Chrome and Safari.\\n * 2. Correct the outline style in Safari.\\n */\\n\\n[type=\\\"search\\\"] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/**\\n * Remove the inner padding in Chrome and Safari on macOS.\\n */\\n\\n[type=\\\"search\\\"]::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/**\\n * 1. Correct the inability to style clickable types in iOS and Safari.\\n * 2. Change font properties to `inherit` in Safari.\\n */\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/* Interactive\\n   ========================================================================== */\\n\\n/*\\n * Add the correct display in Edge, IE 10+, and Firefox.\\n */\\n\\ndetails {\\n  display: block;\\n}\\n\\n/*\\n * Add the correct display in all browsers.\\n */\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/* Misc\\n   ========================================================================== */\\n\\n/**\\n * Add the correct display in IE 10+.\\n */\\n\\ntemplate {\\n  display: none;\\n}\\n\\n/**\\n * Add the correct display in IE 10.\\n */\\n\\n[hidden] {\\n  display: none;\\n}\",\"@import 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap';\\n/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\\n/* Document\\n   ========================================================================== */\\n/**\\n * 1. Correct the line height in all browsers.\\n * 2. Prevent adjustments of font size after orientation changes in iOS.\\n */\\nhtml {\\n  line-height: 1.15; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n}\\n\\n/* Sections\\n   ========================================================================== */\\n/**\\n * Remove the margin in all browsers.\\n */\\nbody {\\n  margin: 0;\\n}\\n\\n/**\\n * Render the `main` element consistently in IE.\\n */\\nmain {\\n  display: block;\\n}\\n\\n/**\\n * Correct the font size and margin on `h1` elements within `section` and\\n * `article` contexts in Chrome, Firefox, and Safari.\\n */\\nh1 {\\n  font-size: 2em;\\n  margin: 0.67em 0;\\n}\\n\\n/* Grouping content\\n   ========================================================================== */\\n/**\\n * 1. Add the correct box sizing in Firefox.\\n * 2. Show the overflow in Edge and IE.\\n */\\nhr {\\n  box-sizing: content-box; /* 1 */\\n  height: 0; /* 1 */\\n  overflow: visible; /* 2 */\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\npre {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/* Text-level semantics\\n   ========================================================================== */\\n/**\\n * Remove the gray background on active links in IE 10.\\n */\\na {\\n  background-color: transparent;\\n}\\n\\n/**\\n * 1. Remove the bottom border in Chrome 57-\\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\\n */\\nabbr[title] {\\n  border-bottom: none; /* 1 */\\n  text-decoration: underline; /* 2 */\\n  text-decoration: underline dotted; /* 2 */\\n}\\n\\n/**\\n * Add the correct font weight in Chrome, Edge, and Safari.\\n */\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/**\\n * 1. Correct the inheritance and scaling of font size in all browsers.\\n * 2. Correct the odd `em` font sizing in all browsers.\\n */\\ncode,\\nkbd,\\nsamp {\\n  font-family: monospace, monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/**\\n * Add the correct font size in all browsers.\\n */\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/**\\n * Prevent `sub` and `sup` elements from affecting the line height in\\n * all browsers.\\n */\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/* Embedded content\\n   ========================================================================== */\\n/**\\n * Remove the border on images inside links in IE 10.\\n */\\nimg {\\n  border-style: none;\\n}\\n\\n/* Forms\\n   ========================================================================== */\\n/**\\n * 1. Change the font styles in all browsers.\\n * 2. Remove the margin in Firefox and Safari.\\n */\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  line-height: 1.15; /* 1 */\\n  margin: 0; /* 2 */\\n}\\n\\n/**\\n * Show the overflow in IE.\\n * 1. Show the overflow in Edge.\\n */\\nbutton,\\ninput { /* 1 */\\n  overflow: visible;\\n}\\n\\n/**\\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\\n * 1. Remove the inheritance of text transform in Firefox.\\n */\\nbutton,\\nselect { /* 1 */\\n  text-transform: none;\\n}\\n\\n/**\\n * Correct the inability to style clickable types in iOS and Safari.\\n */\\nbutton,\\n[type=button],\\n[type=reset],\\n[type=submit] {\\n  -webkit-appearance: button;\\n}\\n\\n/**\\n * Remove the inner border and padding in Firefox.\\n */\\nbutton::-moz-focus-inner,\\n[type=button]::-moz-focus-inner,\\n[type=reset]::-moz-focus-inner,\\n[type=submit]::-moz-focus-inner {\\n  border-style: none;\\n  padding: 0;\\n}\\n\\n/**\\n * Restore the focus styles unset by the previous rule.\\n */\\nbutton:-moz-focusring,\\n[type=button]:-moz-focusring,\\n[type=reset]:-moz-focusring,\\n[type=submit]:-moz-focusring {\\n  outline: 1px dotted ButtonText;\\n}\\n\\n/**\\n * Correct the padding in Firefox.\\n */\\nfieldset {\\n  padding: 0.35em 0.75em 0.625em;\\n}\\n\\n/**\\n * 1. Correct the text wrapping in Edge and IE.\\n * 2. Correct the color inheritance from `fieldset` elements in IE.\\n * 3. Remove the padding so developers are not caught out when they zero out\\n *    `fieldset` elements in all browsers.\\n */\\nlegend {\\n  box-sizing: border-box; /* 1 */\\n  color: inherit; /* 2 */\\n  display: table; /* 1 */\\n  max-width: 100%; /* 1 */\\n  padding: 0; /* 3 */\\n  white-space: normal; /* 1 */\\n}\\n\\n/**\\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\\n */\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/**\\n * Remove the default vertical scrollbar in IE 10+.\\n */\\ntextarea {\\n  overflow: auto;\\n}\\n\\n/**\\n * 1. Add the correct box sizing in IE 10.\\n * 2. Remove the padding in IE 10.\\n */\\n[type=checkbox],\\n[type=radio] {\\n  box-sizing: border-box; /* 1 */\\n  padding: 0; /* 2 */\\n}\\n\\n/**\\n * Correct the cursor style of increment and decrement buttons in Chrome.\\n */\\n[type=number]::-webkit-inner-spin-button,\\n[type=number]::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/**\\n * 1. Correct the odd appearance in Chrome and Safari.\\n * 2. Correct the outline style in Safari.\\n */\\n[type=search] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/**\\n * Remove the inner padding in Chrome and Safari on macOS.\\n */\\n[type=search]::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/**\\n * 1. Correct the inability to style clickable types in iOS and Safari.\\n * 2. Change font properties to `inherit` in Safari.\\n */\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/* Interactive\\n   ========================================================================== */\\n/*\\n * Add the correct display in Edge, IE 10+, and Firefox.\\n */\\ndetails {\\n  display: block;\\n}\\n\\n/*\\n * Add the correct display in all browsers.\\n */\\nsummary {\\n  display: list-item;\\n}\\n\\n/* Misc\\n   ========================================================================== */\\n/**\\n * Add the correct display in IE 10+.\\n */\\ntemplate {\\n  display: none;\\n}\\n\\n/**\\n * Add the correct display in IE 10.\\n */\\n[hidden] {\\n  display: none;\\n}\\n\\n[data-theme=light] {\\n  --background-color: #FBFBFC;\\n  --background-section: #FBFBFC;\\n  --background-button-cta: #FFFFFF;\\n  --background-button-cta-hover: rgba(255, 255, 255, 0.8);\\n  --background-button-side: rgba(255, 255, 255, 0.1);\\n  --background-button-side-hover: rgba(255, 255, 255, 0.3);\\n  --color-text-cta: transparent;\\n  --color-text-title: #101014;\\n  --color-text-title-high: #5E5CE5;\\n  --color-text-body: #5D87A8;\\n  --color-text-link: rgba(255, 255, 255, 0.65);\\n  --color-text-link-hover: #FFFFFF;\\n  --border: rgba(255, 255, 255, 0.1);\\n  --icon: #FFFFFF;\\n  --icon-box: rgba(255, 255, 255, 0.1);\\n  --icon-box-hover: rgba(255, 255, 255, 0.3);\\n}\\n\\n[data-theme=dark] {\\n  --background-color: #101014;\\n  --background-section: #1B1E26;\\n  --background-button-cta: #5E5CE5;\\n  --background-button-cta-hover: #5E5CE5;\\n  --background-button-side: #1B1E26;\\n  --background-button-side-hover: #2B2F3B;\\n  --color-text-cta: #FFFFFF;\\n  --color-text-title: #FFFFFF;\\n  --color-text-title-high: #5E5CE5;\\n  --color-text-body: #A1A3AA;\\n  --color-text-link: #8181A1;\\n  --color-text-link-hover: #5E5CE5;\\n  --border: rgba(255, 255, 255, 0.1);\\n  --icon: #8181A1;\\n  --icon-box: #1B1E26;\\n  --icon-box-hover: #2B2F3B;\\n}\\n\\n/*\\t======================================================================================\\n * 2.\\tMixins\\n * Utilitaries mixins for different cases and save code */\\nhtml {\\n  transition: 0.5s;\\n  scroll-behavior: smooth;\\n}\\n\\nbody {\\n  padding: 0;\\n  margin: 0 auto;\\n}\\n\\nul, figure, p, h1 {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\na {\\n  text-decoration: none;\\n}\\n\\nbutton {\\n  cursor: pointer;\\n  border-width: 0;\\n  border-style: none;\\n  border-color: transparent;\\n  box-sizing: content-box;\\n}\\nbutton:focus {\\n  outline: none;\\n}\\n\\nh1 {\\n  font-size: 90px;\\n  font-weight: 800;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  h1 {\\n    font-size: 75px;\\n  }\\n}\\n@media (max-width: 768px) {\\n  h1 {\\n    font-size: 50px;\\n    line-height: 1.2em;\\n  }\\n}\\n\\nh2 {\\n  font-size: 64px;\\n  font-weight: 700;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  h2 {\\n    font-size: 50px;\\n  }\\n}\\n\\nh3 {\\n  margin: 0;\\n  font-size: 32px;\\n  font-weight: 700;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  h3 {\\n    font-size: 20px;\\n  }\\n}\\n\\n.layout {\\n  margin: 0 auto;\\n  padding: 0 40px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-size: 14px;\\n  color: var(--color-text-body);\\n  max-width: 1280px;\\n}\\n@media (max-width: 768px) {\\n  .layout {\\n    padding: 0 16px;\\n  }\\n}\\n\\n.hide {\\n  display: none;\\n}\\n\\n.space {\\n  height: 40px;\\n}\\n\\n.pill-sky {\\n  padding: 0.5em 1em;\\n  background-color: hsl(208, 90%, 96%);\\n  color: hsl(207, 100%, 63%);\\n  border-radius: 2em;\\n}\\n.pill-sky p {\\n  font-size: 0.86rem;\\n  line-height: 1.3;\\n}\\n\\n.button-icon-box {\\n  width: 40px;\\n  height: 40px;\\n  background-color: var(--icon-box);\\n  cursor: pointer;\\n}\\n.button-icon-box:hover {\\n  background-color: var(--icon-box-hover);\\n  transition: 0.5s;\\n}\\n.button-icon-box a {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n.button-icon-box a > svg path {\\n  fill: var(--icon);\\n}\\n.button-icon-box a .icon-color-purp path {\\n  fill: #F206B0;\\n}\\n\\n.background-main {\\n  background-color: var(--background-color);\\n}\\n\\n/*  ======================================================================================\\n *  1.  Design Tokens\\n *      Set up for atomic elements from design kit as variables */\\n.header-main-content {\\n  width: auto;\\n  display: grid;\\n  grid-template-columns: 1fr auto 1fr;\\n  align-items: center;\\n  padding: 1.7em 0;\\n}\\n@media (max-width: 768px) {\\n  .header-main-content {\\n    grid-template-columns: 1fr auto;\\n  }\\n}\\n\\n.group-logo {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.header-main-nav {\\n  height: 100%;\\n}\\n.header-main-nav ul {\\n  height: 100%;\\n  display: grid;\\n  grid-auto-flow: column;\\n  column-gap: 2.2em;\\n}\\n.header-main-nav ul li {\\n  display: inline-block;\\n  height: 100%;\\n}\\n.header-main-nav ul li a {\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  align-items: center;\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.5em;\\n  color: var(--color-text-link);\\n}\\n.header-main-nav ul li a:hover {\\n  color: var(--color-text-link-hover);\\n  transition: 0.5s;\\n}\\n@media (max-width: 768px) {\\n  .header-main-nav {\\n    display: none;\\n  }\\n}\\n\\n.header-group-icons {\\n  display: grid;\\n  grid-auto-flow: column;\\n  justify-content: end;\\n  column-gap: 2.2em;\\n}\\n@media (max-width: 768px) {\\n  .header-group-icons :nth-child(1).button-icon-box {\\n    display: none;\\n  }\\n}\\n\\n.logo {\\n  font-size: 20px;\\n  font-weight: 400;\\n  letter-spacing: -0.04em;\\n}\\n.logo a {\\n  color: #101014;\\n}\\n\\n.icon-link-box {\\n  width: 24px;\\n  height: 24px;\\n}\\n.icon-link-box a {\\n  display: block;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.icon-grey-to-purp a svg {\\n  fill: #5D87A8;\\n}\\n.icon-grey-to-purp a:hover svg {\\n  fill: #5E5CE5;\\n  transition: 0.5s;\\n}\\n\\n.hero-content {\\n  width: 100%;\\n  padding: 10em 0;\\n  display: grid;\\n  grid-auto-flow: row;\\n  row-gap: 6em;\\n  justify-items: center;\\n}\\n@media (max-width: 425px) {\\n  .hero-content {\\n    margin-top: 2em;\\n  }\\n}\\n\\n.hero-group-texts {\\n  text-align: center;\\n  display: grid;\\n  grid-auto-flow: row;\\n  row-gap: 3em;\\n}\\n\\n.hero-group-buttons {\\n  display: grid;\\n  grid-auto-flow: column;\\n  column-gap: 0.75em;\\n}\\n@media (max-width: 425px) {\\n  .hero-group-buttons {\\n    width: 100%;\\n    grid-auto-flow: row;\\n    row-gap: 0.75em;\\n  }\\n}\\n\\n.hero-title {\\n  margin: 0 auto;\\n  color: var(--color-text-title);\\n  font-size: 90px;\\n  font-weight: 800;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n@media (max-width: 1024px) {\\n  .hero-title {\\n    font-size: 75px;\\n  }\\n}\\n@media (max-width: 768px) {\\n  .hero-title {\\n    font-size: 50px;\\n    line-height: 1.2em;\\n  }\\n}\\n.hero-title-color {\\n  color: var(--color-text-title-high);\\n}\\n@media (max-width: 425px) {\\n  .hero-title {\\n    font-size: 24px;\\n    font-weight: 700;\\n    font-style: normal;\\n    line-height: 1.15em;\\n    letter-spacing: -0.04em;\\n  }\\n}\\n\\n.hero-description {\\n  max-width: 520px;\\n  margin: 0 auto;\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  color: var(--color-text-body-bg);\\n}\\n@media (max-width: 425px) {\\n  .hero-description {\\n    max-width: 260px;\\n  }\\n}\\n\\n.button {\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.5em;\\n  text-align: center;\\n  padding: 1.15rem 2.85rem;\\n  border-radius: 0.7rem;\\n  display: block;\\n  margin: 0 auto;\\n}\\n@media (max-width: 425px) {\\n  .button {\\n    font-size: 14px;\\n    font-weight: 400;\\n    font-style: normal;\\n    line-height: 1.5em;\\n    padding: 0.85em 1.3em;\\n    min-width: 144px;\\n  }\\n}\\n.button:hover {\\n  transition: 0.5s;\\n}\\n.button-cta {\\n  background: var(--background-button-cta);\\n}\\n.button-cta:hover {\\n  background: var(--background-button-cta-hover);\\n}\\n.button-cta-text {\\n  color: var(--color-text-cta);\\n}\\n.button-side {\\n  background: var(--background-button-side);\\n  color: #FFFFFF;\\n}\\n.button-side:hover {\\n  background: var(--background-button-side-hover);\\n}\\n\\n.feature-content {\\n  background: var(--background-section);\\n  width: 324px;\\n  display: grid;\\n  grid-auto-flow: row;\\n  border-radius: 10px;\\n}\\n@media (max-width: 768px) {\\n  .feature-content {\\n    grid-auto-flow: row;\\n    row-gap: 16px;\\n    justify-items: center;\\n  }\\n}\\n\\n.icon-box {\\n  width: 70px;\\n  height: 70px;\\n  background-color: #FFFFFF;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n@media (max-width: 425px) {\\n  .icon-box {\\n    width: 50px;\\n    height: 50px;\\n  }\\n}\\n.icon-box svg {\\n  width: 36px;\\n  height: auto;\\n}\\n@media (max-width: 425px) {\\n  .icon-box svg {\\n    width: 25px;\\n  }\\n}\\n.icon-box svg path {\\n  fill: #FFFFFF;\\n}\\n\\n.feature-group-texts {\\n  text-align: left;\\n  display: grid;\\n  grid-auto-flow: row;\\n  row-gap: 4px;\\n  padding: 24px;\\n}\\n@media (max-width: 768px) {\\n  .feature-group-texts {\\n    text-align: center;\\n  }\\n}\\n\\n.feature-title {\\n  color: var(--color-text-title);\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  font-weight: 500;\\n}\\n@media (max-width: 425px) {\\n  .feature-title {\\n    font-size: 18px;\\n    font-weight: 700;\\n    font-style: normal;\\n    line-height: 1.15em;\\n    letter-spacing: -0.04em;\\n  }\\n}\\n\\n.feature-description {\\n  font-size: 14px;\\n  font-weight: 300;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  color: var(--color-text-body);\\n}\\n@media (max-width: 768px) {\\n  .feature-description {\\n    margin: 0 auto;\\n    max-width: 180px;\\n  }\\n}\\n\\n.section-container {\\n  display: grid;\\n  grid-auto-flow: row;\\n  row-gap: 40px;\\n  padding: 120px 0;\\n  border-radius: 40px;\\n}\\n@media (max-width: 768px) {\\n  .section-container {\\n    border-radius: 20px 20px 0 0;\\n    padding: 56px 0;\\n    row-gap: 56px;\\n  }\\n}\\n.section-container-background {\\n  background: var(--background-section);\\n  border: 1px solid var(--border);\\n}\\n\\n.section-group-texts {\\n  text-align: center;\\n  display: grid;\\n  grid-auto-flow: row;\\n  row-gap: 16px;\\n}\\n\\n.section-title {\\n  color: var(--color-text-title);\\n  margin: 0 auto;\\n  font-size: 64px;\\n  font-weight: 700;\\n  font-style: normal;\\n  line-height: 1.15em;\\n  letter-spacing: -0.04em;\\n}\\n.section-title-color {\\n  color: var(--color-text-title);\\n}\\n@media (max-width: 1024px) {\\n  .section-title {\\n    font-size: 50px;\\n  }\\n}\\n@media (max-width: 425px) {\\n  .section-title {\\n    font-size: 20px;\\n    font-weight: 700;\\n    font-style: normal;\\n    line-height: 1.15em;\\n    letter-spacing: -0.04em;\\n  }\\n}\\n\\n.section-description {\\n  margin: 0 auto;\\n  font-size: 18px;\\n  font-weight: 400;\\n  font-style: normal;\\n  line-height: 1.6em;\\n  color: var(--color-text-body);\\n}\\n@media (max-width: 425px) {\\n  .section-description {\\n    max-width: 260px;\\n  }\\n}\\n\\n.features-group {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(324px, 1fr));\\n  row-gap: 120px;\\n  justify-items: center;\\n  padding: 0 64px;\\n}\\n@media (max-width: 768px) {\\n  .features-group {\\n    grid-template-columns: repeat(auto-fill, minmax(260px, 1fr));\\n    row-gap: 56px;\\n    padding: 0;\\n  }\\n}\\n.features-group :nth-child(1) .icon-box {\\n  background-color: #F0DCFF;\\n}\\n.features-group :nth-child(1) .icon-box > svg path {\\n  fill: #AF48FF;\\n}\\n.features-group :nth-child(2) .icon-box {\\n  background-color: #D7DEF7;\\n}\\n.features-group :nth-child(2) .icon-box > svg path {\\n  fill: #5460FE;\\n}\\n.features-group :nth-child(3) .icon-box {\\n  background-color: #FFEADE;\\n}\\n.features-group :nth-child(3) .icon-box > svg path {\\n  fill: #FF612F;\\n}\\n.features-group :nth-child(4) .icon-box {\\n  background-color: #FFE4E4;\\n}\\n.features-group :nth-child(4) .icon-box > svg path {\\n  fill: #FF3F3F;\\n}\\n.features-group :nth-child(5) .icon-box {\\n  background-color: #D8EDFF;\\n}\\n.features-group :nth-child(5) .icon-box > svg path {\\n  fill: #40AAFF;\\n}\\n.features-group :nth-child(6) .icon-box {\\n  background-color: #DDF3E6;\\n}\\n.features-group :nth-child(6) .icon-box > svg path {\\n  fill: #4CCC81;\\n}\",\"//\\t==========================================================================\\n\\t1. Design Tokens - Set up for atomic elements from design kit as variables\\n\\n//\\t1.1 Colors Variables\\n\\n$color-dark-90: #101014\\n$color-dark-80: #1B1E26\\n$color-dark-70: #2B2F3B\\n$color-dark-40: #8181A1\\n$color-gray-60: #5D87A8\\n$color-gray-50: #859FB4\\n$color-gray-40: #A1A3AA\\n$color-gray-10: hsla(210, 14%, 99%, 1)\\n$color-sky: hsla(207, 100%, 63%, 1)\\n$color-sky-40: hsla(207, 100%, 70%, 1)\\n$color-sky-10: hsla(208, 90%, 96%, 1)\\n$color-accent-white: #FFFFFF\\n$color-accent-white-80: rgba($color-accent-white, .8)\\n$color-accent-white-65: rgba($color-accent-white, .65)\\n$color-accent-white-50: rgba($color-accent-white, .5)\\n$color-accent-white-30: rgba($color-accent-white, .3)\\n$color-accent-white-20: rgba($color-accent-white, .3)\\n$color-accent-white-10: rgba($color-accent-white, .1)\\n$color-accent-white-05: rgba($color-accent-white, .01)\\n$color-main-50: #5E5CE5\\n$color-main-30: #5E5CE5\\n$color-main-20: #F5EDFF\\n$color-main-10: #f5f2f8\\n$color-main-05: #FBFBFC\\n$color-base-50: #F206B0\\n$color-layout-05: #FBFBFC\\n\\n[data-theme='light']\\n\\t--background-color: #{$color-layout-05}\\n\\t--background-section: #{$color-main-05}\\n\\t--background-button-cta: #{$color-accent-white}\\n\\t--background-button-cta-hover: #{$color-accent-white-80}\\n\\t--background-button-side: #{$color-accent-white-10}\\n\\t--background-button-side-hover: #{$color-accent-white-20}\\n\\t--color-text-cta: transparent\\n\\t--color-text-title: #{$color-dark-90}\\n\\t--color-text-title-high: #{$color-main-50}\\n\\t--color-text-body: #{$color-gray-60}\\n\\t--color-text-link: #{$color-accent-white-65}\\n\\t--color-text-link-hover: #{$color-accent-white}\\n\\t--border: #{$color-accent-white-10}\\n\\t--icon: #{$color-accent-white}\\n\\t--icon-box: #{$color-accent-white-10}\\n\\t--icon-box-hover: #{$color-accent-white-20}\\n[data-theme='dark']\\n\\t--background-color: #{$color-dark-90}\\n\\t--background-section: #{$color-dark-80}\\n\\t--background-button-cta: #{$color-main-50}\\n\\t--background-button-cta-hover: #{$color-main-30}\\n\\t--background-button-side: #{$color-dark-80}\\n\\t--background-button-side-hover: #{$color-dark-70}\\n\\t--color-text-cta: #{$color-accent-white}\\n\\t--color-text-title: #{$color-accent-white}\\n\\t--color-text-title-high: #{$color-main-50}\\n\\t--color-text-body: #{$color-gray-40}\\n\\t--color-text-link: #{$color-dark-40}\\n\\t--color-text-link-hover: #{$color-main-50}\\n\\t--border: #{$color-accent-white-10}\\n\\t--icon: #{$color-dark-40}\\n\\t--icon-box: #{$color-dark-80}\\n\\t--icon-box-hover: #{$color-dark-70}\",\"/*\\t======================================================================================\\n\\t2.\\tMixins\\n\\t\\tUtilitaries mixins for different cases and save code\\n\\n=flex-row-between\\n\\tdisplay: flex\\n\\tjustify-content: space-between\\n\\n=flex-golumn-set-gap\\n\\tdisplay: flex\\n\\tflex-direction: column\\n\\n=flex-row-set-gap\\n\\tdisplay: flex\\n\\n=flex-content-center\\n\\tdisplay: flex\\n\\talign-items: center\\n\\tjustify-content: center\\n\\n// Base resolution set for max 1280px (Desktop)\\n=max-width-desktop\\n\\tmax-width: 1280px\",\"@use 'animations' as *\\n@use 'fonts' as *\\n@use 'breakpoints' as *\\n\\n//\\t==========================================================================\\n\\t3. General - Setting up some base styles\\n\\nhtml\\n\\t+transition\\n\\tscroll-behavior: smooth\\nbody\\n\\tpadding: 0\\n\\tmargin: 0 auto\\nul, figure, p, h1\\n\\tmargin: 0\\n\\tpadding: 0\\na\\n\\ttext-decoration: none\\nbutton\\n\\tcursor: pointer\\n\\tborder-width: 0\\n\\tborder-style: none\\n\\tborder-color: transparent\\n\\tbox-sizing: content-box\\n\\t&:focus\\n\\t\\toutline: none\\nh1\\n\\t+text-style-h1\\n\\nh2\\n\\t+text-style-h2\\n\\nh3\\n\\tmargin: 0\\n\\t+text-style-title\",\"=transition\\n\\ttransition: .5s\",\"//\\t2.2 breakpoints - Sets mixins for different screen breakpoints for devices\\n\\tmin is from\\n\\tmax es to\\n\\n//\\tSmaller than 1024px (Laptop)\\n=breakpoint-laptop\\n\\t@media ( max-width: 1024px )\\n\\t\\t@content\\n\\n//\\tSmaller than 768px (Tablet)\\n=breakpoint-tablet\\n\\t@media ( max-width: 768px )\\n\\t\\t@content\\n\\n//\\tSmaller than 425px (Mobile S320-M375-L425)\\n=breakpoint-mobile\\n\\t@media ( max-width: 425px )\\n\\t\\t@content\",\"@use 'colors' as *\\n@use 'fonts' as *\\n@use 'mixins' as *\\n@use 'breakpoints' as *\\n@use \\\"animations\\\" as *\\n\\n.layout\\n\\tmargin: 0 auto\\n\\tpadding: 0 40px\\n\\t+typography-style\\n\\t+max-width-desktop\\n\\t+breakpoint-tablet\\n\\t\\tpadding: 0 16px\\n\\n//\\t==========================================================================\\n\\t5. Utilities - These things get used a lot\\n\\n.hide\\n\\tdisplay: none\\n.space\\n\\theight: 40px\\n\\n.pill-sky\\n\\tpadding: .5em 1em\\n\\tbackground-color: $color-sky-10\\n\\tcolor: $color-sky\\n\\tborder-radius: 2em\\n\\tp\\n\\t\\tfont-size: $font-size-12px\\n\\t\\tline-height: 1.3\\n\\n.button-icon-box\\n\\twidth: 40px\\n\\theight: 40px\\n\\tbackground-color: var(--icon-box)\\n\\t// mask-image: url(../../public/img/token/box.svg)\\n\\tcursor: pointer\\n\\t&:hover\\n\\t\\tbackground-color: var(--icon-box-hover)\\n\\t\\t+transition\\n\\ta\\n\\t\\t+flex-content-center\\n\\t\\twidth: 100%\\n\\t\\theight: 100%\\n\\t\\t> svg path\\n\\t\\t\\tfill: var(--icon)\\n\\t\\t.icon-color-purp\\n\\t\\t\\tpath\\n\\t\\t\\t\\tfill: $color-base-50\",\"@use 'colors' as *\\n\\n.background-main\\n\\tbackground-color: var(--background-color)\",\"/*  ======================================================================================\\n    1.  Design Tokens\\n        Set up for atomic elements from design kit as variables\\n@forward 'colors'\\n@forward 'fonts'\\n@forward 'breakpoints'\\n@forward 'animations'\\n@forward 'mixins'\\n@forward 'reset'\\n@forward 'global'\\n@forward 'backgrounds'\",\"@use '../../styles/tokens' as *\\n\\n.header-main-content\\n\\twidth: auto\\n\\tdisplay: grid\\n\\tgrid-template-columns: 1fr auto 1fr\\n\\talign-items: center\\n\\tpadding: 1.7em 0\\n\\t@include breakpoint-tablet\\n\\t\\tgrid-template-columns: 1fr auto\\n\\n.group-logo\\n\\tdisplay: flex\\n\\talign-items: center\\n.header-main-nav\\n\\theight: 100%\\n\\tul\\n\\t\\theight: 100%\\n\\t\\tdisplay: grid\\n\\t\\tgrid-auto-flow: column\\n\\t\\tcolumn-gap: 2.2em\\n\\t\\tli\\n\\t\\t\\tdisplay: inline-block\\n\\t\\t\\theight: 100%\\n\\t\\t\\ta\\n\\t\\t\\t\\tdisplay: flex\\n\\t\\t\\t\\twidth: 100%\\n\\t\\t\\t\\theight: 100%\\n\\t\\t\\t\\talign-items: center\\n\\t\\t\\t\\t+text-style-menu\\n\\t\\t\\t\\tcolor: var(--color-text-link)\\n\\t\\t\\t\\t&:hover\\n\\t\\t\\t\\t\\tcolor: var(--color-text-link-hover)\\n\\t\\t\\t\\t\\t+transition\\n\\t+breakpoint-tablet\\n\\t\\tdisplay: none\\n.header-group-icons\\n\\tdisplay: grid\\n\\tgrid-auto-flow: column //Descomentar cuando aparezca el segundo item\\n\\tjustify-content: end //Descubrí como cambia de items a content\\n\\tcolumn-gap: 2.2em //Descomentar cuando aparezca el segundo item\\n\\t@include breakpoint-tablet\\n\\t\\t:nth-child(1).button-icon-box\\n\\t\\t\\tdisplay: none\\n\\t\\t\\n.logo\\n\\tfont-size: $font-size-20px\\n\\tfont-weight: $font-medium\\n\\tletter-spacing: -.04em\\n\\ta\\n\\t\\tcolor: $color-dark-90\\n\\n=icon-state-grey-to-purp\\n\\ta\\n\\t\\tsvg\\n\\t\\t\\tfill: $color-gray-60\\n\\t\\t&:hover svg\\n\\t\\t\\tfill: $color-main-50\\n\\t\\t\\t+transition\\n\\n.icon-link-box\\n\\twidth: 24px\\n\\theight: 24px\\n\\ta\\n\\t\\tdisplay: block\\n\\t\\twidth: 100%\\n\\t\\theight: 100%\\n\\n.icon-grey-to-purp\\n\\t+icon-state-grey-to-purp\",\"@use '../../styles/tokens' as *\\n    \\n.hero-content\\n\\twidth: 100%\\n\\tpadding: 10em 0 //de 14px\\n\\tdisplay: grid\\n\\tgrid-auto-flow: row\\n\\trow-gap: 6em //de 14\\n\\tjustify-items: center\\n\\t+breakpoint-mobile\\n\\t\\tmargin-top: 2em\\n.hero-group-texts\\n\\ttext-align: center\\n\\tdisplay: grid\\n\\tgrid-auto-flow: row\\n\\trow-gap: 3em //de 14\\n\\t// +breakpoint-tablet // Legacy\\n\\t// \\twidth: 90%\\n\\t// +breakpoint-mobile\\n\\t// \\twidth: 100%\\n\\t// \\ttext-align: left\\n\\t// \\trow-gap: 1.5em\\n.hero-group-buttons\\n\\tdisplay: grid\\n\\tgrid-auto-flow: column\\n\\tcolumn-gap: .75em\\n\\t+breakpoint-mobile\\n\\t\\twidth: 100%\\n\\t\\tgrid-auto-flow: row\\n\\t\\trow-gap: .75em\\n.hero-title\\n\\tmargin: 0 auto\\n\\tcolor: var(--color-text-title)\\n\\t@include text-style-h1\\n\\t&-color\\n\\t\\tcolor: var(--color-text-title-high)\\n\\t+breakpoint-mobile\\n\\t\\t+text-style-h1-small\\n.hero-description\\n\\tmax-width: 520px\\n\\tmargin: 0 auto\\n\\t+text-style-body\\n\\tcolor: var(--color-text-body-bg)\\n\\t+breakpoint-mobile\\n\\t\\tmax-width: 260px\",\"@use '../../styles/tokens' as *\\n\\n.button\\n\\t+text-style-buttons\\n\\ttext-align: center\\n\\tpadding: 1.15rem 2.85rem\\n\\tborder-radius: .7rem\\n\\tdisplay: block\\n\\tmargin: 0 auto\\n\\t+breakpoint-mobile\\n\\t\\t+text-style-buttons-small\\n\\t\\tpadding: .85em 1.3em\\n\\t\\tmin-width: 144px \\n\\t&:hover\\n\\t\\t+transition\\n\\t&-cta\\n\\t\\tbackground: var(--background-button-cta)\\n\\t\\t&:hover\\n\\t\\t\\tbackground: var(--background-button-cta-hover)\\n\\t\\t&-text\\n\\t\\t\\tcolor: var(--color-text-cta)\\n\\t&-side\\n\\t\\tbackground: var(--background-button-side)\\n\\t\\tcolor: $color-accent-white\\n\\t\\t&:hover\\n\\t\\t\\tbackground: var(--background-button-side-hover)\",\"@use '../../styles/tokens' as *\\n\\n.feature-content\\n\\tbackground: var(--background-section)\\n\\twidth: 324px\\n\\tdisplay: grid\\n\\tgrid-auto-flow: row\\n\\tborder-radius: 10px \\n\\t+breakpoint-tablet\\n\\t\\tgrid-auto-flow: row\\n\\t\\trow-gap: 16px\\n\\t\\tjustify-items: center\\n\\n.icon-box\\n\\twidth: 70px\\n\\theight: 70px\\n\\tbackground-color: $color-accent-white\\n\\t// mask-image: url(../../public/img/token/box.svg)\\n\\t//&:hover\\n\\t//\\tbackground-color: $color-accent-white-20\\n\\t//\\t+transition\\n\\t+flex-content-center\\n\\t+breakpoint-mobile\\n\\t\\twidth: 50px\\n\\t\\theight: 50px\\n\\tsvg\\n\\t\\twidth: 36px\\n\\t\\theight: auto\\n\\t\\t+breakpoint-mobile\\n\\t\\t\\twidth: 25px\\n\\t\\tpath\\n\\t\\t\\tfill: $color-accent-white\\n\\n.feature-group-texts\\n\\ttext-align: left\\n\\tdisplay: grid\\n\\tgrid-auto-flow: row\\n\\trow-gap: 4px\\n\\tpadding: 24px\\n\\t+breakpoint-tablet\\n\\t\\ttext-align: center\\n\\n.feature-title\\n\\tcolor: var(--color-text-title)\\n\\t@include text-style-body\\n\\tfont-weight: $font-semibold\\n\\t+breakpoint-mobile\\n\\t\\t+text-style-title-small\\n\\n.feature-description\\n\\t@include text-style-note\\n\\tcolor: var(--color-text-body)\\n\\t+breakpoint-tablet\\n\\t\\tmargin: 0 auto\\n\\t\\tmax-width: 180px\",\"@use '../../styles/tokens' as *\\n\\n.section-container\\n\\tdisplay: grid\\n\\tgrid-auto-flow: row\\n\\trow-gap: 40px\\n\\tpadding: 120px 0\\n\\tborder-radius: 40px\\n\\t+breakpoint-tablet\\n\\t\\tborder-radius: 20px 20px 0 0\\n\\t\\tpadding: 56px 0\\n\\t\\trow-gap: 56px\\n\\t&-background\\n\\t\\tbackground: var(--background-section)\\n\\t\\tborder: 1px solid var(--border)\\n\\n.section-group-texts\\n\\ttext-align: center\\n\\tdisplay: grid\\n\\tgrid-auto-flow: row\\n\\trow-gap: 16px\\n\\n.section-title\\n\\tcolor: var(--color-text-title)\\n\\t&-color\\n\\t\\tcolor: var(--color-text-title)\\n\\tmargin: 0 auto\\n\\t+text-style-h2\\n\\t+breakpoint-mobile\\n\\t\\t+text-style-h2-small\\n\\n.section-description\\n\\tmargin: 0 auto\\n\\t+text-style-body\\n\\tcolor: var(--color-text-body)\\n\\t+breakpoint-mobile\\n\\t\\tmax-width: 260px\\n\\n.features-group\\n\\tdisplay: grid\\n\\tgrid-template-columns: repeat(auto-fill, minmax(324px, 1fr))\\n\\trow-gap: 120px\\n\\tjustify-items: center\\n\\tpadding: 0 64px\\n\\t+breakpoint-tablet\\n\\t\\tgrid-template-columns: repeat(auto-fill, minmax(260px, 1fr))\\n\\t\\trow-gap: 56px\\n\\t\\tpadding: 0\\n\\t:nth-child(1) .icon-box\\n\\t\\tbackground-color: #F0DCFF\\n\\t\\t> svg path\\n\\t\\t\\tfill: #AF48FF\\n\\t:nth-child(2) .icon-box\\n\\t\\tbackground-color: #D7DEF7\\n\\t\\t> svg path\\n\\t\\t\\tfill: #5460FE\\n\\t:nth-child(3) .icon-box\\n\\t\\tbackground-color: #FFEADE\\n\\t\\t> svg path\\n\\t\\t\\tfill: #FF612F\\n\\t:nth-child(4) .icon-box\\n\\t\\tbackground-color: #FFE4E4\\n\\t\\t> svg path\\n\\t\\t\\tfill: #FF3F3F\\n\\t:nth-child(5) .icon-box\\n\\t\\tbackground-color: #D8EDFF\\n\\t\\t> svg path\\n\\t\\t\\tfill: #40AAFF\\n\\t:nth-child(6) .icon-box\\n\\t\\tbackground-color: #DDF3E6\\n\\t\\t> svg path\\n\\t\\t\\tfill: #4CCC81\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./styles/main.sass\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/ // css base code, injected by the css-loader\n// eslint-disable-next-line func-names\n\nmodule.exports = function(useSourceMap) {\n    var list = [] // return the list of modules as css string\n    ;\n    list.toString = function toString() {\n        return this.map(function(item) {\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            var content = cssWithMappingToString(item, useSourceMap);\n            if (item[2]) {\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n            }\n            return content;\n        }).join(\"\");\n    } // import a list of modules into the list\n    ;\n    // eslint-disable-next-line func-names\n    // @ts-expect-error TODO: fix type\n    list.i = function(modules, mediaQuery, dedupe) {\n        if (typeof modules === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            modules = [\n                [\n                    null,\n                    modules,\n                    \"\"\n                ]\n            ];\n        }\n        var alreadyImportedModules = {};\n        if (dedupe) {\n            for(var i = 0; i < this.length; i++){\n                // eslint-disable-next-line prefer-destructuring\n                var id = this[i][0];\n                if (id != null) {\n                    alreadyImportedModules[id] = true;\n                }\n            }\n        }\n        for(var _i = 0; _i < modules.length; _i++){\n            var item = [].concat(modules[_i]);\n            if (dedupe && alreadyImportedModules[item[0]]) {\n                continue;\n            }\n            if (mediaQuery) {\n                if (!item[2]) {\n                    item[2] = mediaQuery;\n                } else {\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n                }\n            }\n            list.push(item);\n        }\n    };\n    return list;\n};\nfunction cssWithMappingToString(item, useSourceMap) {\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\n    ;\n    var cssMapping = item[3];\n    if (!cssMapping) {\n        return content;\n    }\n    if (useSourceMap && typeof btoa === \"function\") {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        var sourceMapping = toComment(cssMapping);\n        var sourceURLs = cssMapping.sources.map(function(source) {\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n        });\n        return [\n            content\n        ].concat(sourceURLs).concat([\n            sourceMapping\n        ]).join(\"\\n\");\n    }\n    return [\n        content\n    ].join(\"\\n\");\n} // Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2E7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELHFCQUFxQjtBQUN6RTtBQUNBO0FBQ0EsU0FBUztBQUNULE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixpQkFBaUI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IscUJBQXFCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvcnVudGltZS9hcGkuanM/Y2E0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qLyAvLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblwidXNlIHN0cmljdFwiO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbih1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgICA7XG4gICAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG4gICAgICAgICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgICAgIH0pLmpvaW4oXCJcIik7XG4gICAgfSAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAgIDtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgVE9ETzogZml4IHR5cGVcbiAgICBsaXN0LmkgPSBmdW5jdGlvbihtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgICAgICAgIG1vZHVsZXMgPSBbXG4gICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgICAgICAgICBtb2R1bGVzLFxuICAgICAgICAgICAgICAgICAgICBcIlwiXG4gICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgICAgICBpZiAoZGVkdXBlKSB7XG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgICAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvcih2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKXtcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcbiAgICAgICAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGxpc3Q7XG59O1xuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgXCJcIiAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICA7XG4gICAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICAgIGlmICghY3NzTWFwcGluZykge1xuICAgICAgICByZXR1cm4gY29udGVudDtcbiAgICB9XG4gICAgaWYgKHVzZVNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdXNlLWJlZm9yZS1kZWZpbmVcbiAgICAgICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICBjb250ZW50XG4gICAgICAgIF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXG4gICAgICAgIF0pLmpvaW4oXCJcXG5cIik7XG4gICAgfVxuICAgIHJldHVybiBbXG4gICAgICAgIGNvbnRlbnRcbiAgICBdLmpvaW4oXCJcXG5cIik7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcbmZ1bmN0aW9uIHRvQ29tbWVudChzb3VyY2VNYXApIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!":
/*!*******************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app! ***!
  \*******************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return __webpack_require__(/*! private-next-pages/_app */ \"./pages/_app.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1wcml2YXRlLW5leHQtcGFnZXMlMkZfYXBwJnBhZ2U9JTJGX2FwcCEuanMiLCJtYXBwaW5ncyI6IjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsbUJBQU8sQ0FBQyxnREFBeUI7QUFDaEQ7QUFDQTtBQUNBLE9BQU8sSUFBVTtBQUNqQixNQUFNLFVBQVU7QUFDaEI7QUFDQSxPQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzY3ODIiXSwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgKHdpbmRvdy5fX05FWFRfUCA9IHdpbmRvdy5fX05FWFRfUCB8fCBbXSkucHVzaChbXG4gICAgICBcIi9fYXBwXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiByZXF1aXJlKFwicHJpdmF0ZS1uZXh0LXBhZ2VzL19hcHBcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL19hcHBcIl0pXG4gICAgICB9KTtcbiAgICB9XG4gICJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!\n"));

/***/ }),

/***/ "./styles/main.sass":
/*!**************************!*\
  !*** ./styles/main.sass ***!
  \**************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!../node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./main.sass */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./styles/main.sass\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\n                    // By default, style-loader injects CSS into the bottom\n                    // of <head>. This causes ordering problems between dev\n                    // and prod. To fix this, we render a <noscript> tag as\n                    // an anchor for the styles to be placed before. These\n                    // styles will be applied _before_ <style jsx global>.\n                    // These elements should always exist. If they do not,\n                    // this code should fail.\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\n                    var parentNode = anchorElement.parentNode// Normally <head>\n                    ;\n                    // Each style tag should be placed right before our\n                    // anchor. By inserting before and not after, we do not\n                    // need to track the last inserted element.\n                    parentNode.insertBefore(element, anchorElement);\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n    if (!a && b || a && !b) {\n        return false;\n    }\n    let p;\n    for(p in a){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (a[p] !== b[p]) {\n            return false;\n        }\n    }\n    for(p in b){\n        if (isNamedExport && p === \"default\") {\n            continue;\n        }\n        if (!a[p]) {\n            return false;\n        }\n    }\n    return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!../node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./main.sass */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./styles/main.sass\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!../node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!../node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./main.sass */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[1].oneOf[14].use[2]!./node_modules/next/dist/build/webpack/loaders/resolve-url-loader/index.js??ruleSet[1].rules[1].oneOf[14].use[3]!./node_modules/next/dist/compiled/sass-loader/cjs.js??ruleSet[1].rules[1].oneOf[14].use[4]!./styles/main.sass\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvbWFpbi5zYXNzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsaTRCQUE2Yjs7QUFFL2Q7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7OztBQUdBLElBQUksSUFBVTtBQUNkLHlCQUF5QixVQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxJQUFJLGlCQUFpQjtBQUNyQixNQUFNLGk0QkFBNmI7QUFDbmM7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQyxpNEJBQTZiOztBQUV2ZDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxnQkFBZ0IsVUFBVTs7QUFFMUI7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxFQUFFLFVBQVU7QUFDWjtBQUNBLEdBQUc7QUFDSDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zdHlsZXMvbWFpbi5zYXNzP2MyY2IiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGFwaSA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1zdHlsZS1sb2FkZXIvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIik7XG4gICAgICAgICAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzE0XS51c2VbMV0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzE0XS51c2VbMl0hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvcmVzb2x2ZS11cmwtbG9hZGVyL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzE0XS51c2VbM10hLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9zYXNzLWxvYWRlci9janMuanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTRdLnVzZVs0XSEuL21haW4uc2Fzc1wiKTtcblxuICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgICAgICAgICAgfVxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLmluc2VydCA9IGZ1bmN0aW9uKGVsZW1lbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gQnkgZGVmYXVsdCwgc3R5bGUtbG9hZGVyIGluamVjdHMgQ1NTIGludG8gdGhlIGJvdHRvbVxuICAgICAgICAgICAgICAgICAgICAvLyBvZiA8aGVhZD4uIFRoaXMgY2F1c2VzIG9yZGVyaW5nIHByb2JsZW1zIGJldHdlZW4gZGV2XG4gICAgICAgICAgICAgICAgICAgIC8vIGFuZCBwcm9kLiBUbyBmaXggdGhpcywgd2UgcmVuZGVyIGEgPG5vc2NyaXB0PiB0YWcgYXNcbiAgICAgICAgICAgICAgICAgICAgLy8gYW4gYW5jaG9yIGZvciB0aGUgc3R5bGVzIHRvIGJlIHBsYWNlZCBiZWZvcmUuIFRoZXNlXG4gICAgICAgICAgICAgICAgICAgIC8vIHN0eWxlcyB3aWxsIGJlIGFwcGxpZWQgX2JlZm9yZV8gPHN0eWxlIGpzeCBnbG9iYWw+LlxuICAgICAgICAgICAgICAgICAgICAvLyBUaGVzZSBlbGVtZW50cyBzaG91bGQgYWx3YXlzIGV4aXN0LiBJZiB0aGV5IGRvIG5vdCxcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxuICAgICAgICAgICAgICAgICAgICB2YXIgYW5jaG9yRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjX19uZXh0X2Nzc19fRE9fTk9UX1VTRV9fXCIpO1xuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50Tm9kZSA9IGFuY2hvckVsZW1lbnQucGFyZW50Tm9kZS8vIE5vcm1hbGx5IDxoZWFkPlxuICAgICAgICAgICAgICAgICAgICA7XG4gICAgICAgICAgICAgICAgICAgIC8vIEVhY2ggc3R5bGUgdGFnIHNob3VsZCBiZSBwbGFjZWQgcmlnaHQgYmVmb3JlIG91clxuICAgICAgICAgICAgICAgICAgICAvLyBhbmNob3IuIEJ5IGluc2VydGluZyBiZWZvcmUgYW5kIG5vdCBhZnRlciwgd2UgZG8gbm90XG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZWxlbWVudCwgYW5jaG9yRWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfTtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuaWYgKG1vZHVsZS5ob3QpIHtcbiAgaWYgKCFjb250ZW50LmxvY2FscyB8fCBtb2R1bGUuaG90LmludmFsaWRhdGUpIHtcbiAgICB2YXIgaXNFcXVhbExvY2FscyA9IGZ1bmN0aW9uIGlzRXF1YWxMb2NhbHMoYSwgYiwgaXNOYW1lZEV4cG9ydCkge1xuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgcDtcbiAgICBmb3IocCBpbiBhKXtcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhW3BdICE9PSBiW3BdKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yKHAgaW4gYil7XG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFbcF0pIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTRdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTRdLnVzZVsyXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9yZXNvbHZlLXVybC1sb2FkZXIvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMV0ub25lT2ZbMTRdLnVzZVszXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3Nhc3MtbG9hZGVyL2Nqcy5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxNF0udXNlWzRdIS4vbWFpbi5zYXNzXCIsXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxNF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxNF0udXNlWzJdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Jlc29sdmUtdXJsLWxvYWRlci9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1sxXS5vbmVPZlsxNF0udXNlWzNdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvc2Fzcy1sb2FkZXIvY2pzLmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzFdLm9uZU9mWzE0XS51c2VbNF0hLi9tYWluLnNhc3NcIik7XG5cbiAgICAgICAgICAgICAgY29udGVudCA9IGNvbnRlbnQuX19lc01vZHVsZSA/IGNvbnRlbnQuZGVmYXVsdCA6IGNvbnRlbnQ7XG5cbiAgICAgICAgICAgICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGlmICghaXNFcXVhbExvY2FscyhvbGRMb2NhbHMsIGNvbnRlbnQubG9jYWxzKSkge1xuICAgICAgICAgICAgICAgIG1vZHVsZS5ob3QuaW52YWxpZGF0ZSgpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgb2xkTG9jYWxzID0gY29udGVudC5sb2NhbHM7XG5cbiAgICAgICAgICAgICAgdXBkYXRlKGNvbnRlbnQpO1xuICAgICAgfVxuICAgIClcbiAgfVxuXG4gIG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHtcbiAgICB1cGRhdGUoKTtcbiAgfSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./styles/main.sass\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\nconst isOldIE = function isOldIE() {\n    let memo;\n    return function memorize() {\n        if (typeof memo === \"undefined\") {\n            // Test for IE <= 9 as proposed by Browserhacks\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n            // Tests for existence of standard globals is to allow style-loader\n            // to operate correctly into non-standard environments\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\n            memo = Boolean(window && document && document.all && !window.atob);\n        }\n        return memo;\n    };\n}();\nconst getTargetElement = function() {\n    const memo = {};\n    return function memorize(target) {\n        if (typeof memo[target] === \"undefined\") {\n            let styleTarget = document.querySelector(target);\n            // Special case to return head of iframe instead of iframe itself\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n                try {\n                    // This will throw an exception if access to iframe is blocked\n                    // due to cross-origin restrictions\n                    styleTarget = styleTarget.contentDocument.head;\n                } catch (e) {\n                    // istanbul ignore next\n                    styleTarget = null;\n                }\n            }\n            memo[target] = styleTarget;\n        }\n        return memo[target];\n    };\n}();\nconst stylesInDom = [];\nfunction getIndexByIdentifier(identifier) {\n    let result = -1;\n    for(let i = 0; i < stylesInDom.length; i++){\n        if (stylesInDom[i].identifier === identifier) {\n            result = i;\n            break;\n        }\n    }\n    return result;\n}\nfunction modulesToDom(list, options) {\n    const idCountMap = {};\n    const identifiers = [];\n    for(let i = 0; i < list.length; i++){\n        const item = list[i];\n        const id = options.base ? item[0] + options.base : item[0];\n        const count = idCountMap[id] || 0;\n        const identifier = id + \" \" + count.toString();\n        idCountMap[id] = count + 1;\n        const index = getIndexByIdentifier(identifier);\n        const obj = {\n            css: item[1],\n            media: item[2],\n            sourceMap: item[3]\n        };\n        if (index !== -1) {\n            stylesInDom[index].references++;\n            stylesInDom[index].updater(obj);\n        } else {\n            stylesInDom.push({\n                identifier: identifier,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                updater: addStyle(obj, options),\n                references: 1\n            });\n        }\n        identifiers.push(identifier);\n    }\n    return identifiers;\n}\nfunction insertStyleElement(options) {\n    const style = document.createElement(\"style\");\n    const attributes = options.attributes || {};\n    if (typeof attributes.nonce === \"undefined\") {\n        const nonce = // eslint-disable-next-line no-undef\n         true ? __webpack_require__.nc : 0;\n        if (nonce) {\n            attributes.nonce = nonce;\n        }\n    }\n    Object.keys(attributes).forEach(function(key) {\n        style.setAttribute(key, attributes[key]);\n    });\n    if (typeof options.insert === \"function\") {\n        options.insert(style);\n    } else {\n        const target = getTargetElement(options.insert || \"head\");\n        if (!target) {\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n        }\n        target.appendChild(style);\n    }\n    return style;\n}\nfunction removeStyleElement(style) {\n    // istanbul ignore if\n    if (style.parentNode === null) {\n        return false;\n    }\n    style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */ const replaceText = function replaceText() {\n    const textStore = [];\n    return function replace(index, replacement) {\n        textStore[index] = replacement;\n        return textStore.filter(Boolean).join(\"\\n\");\n    };\n}();\nfunction applyToSingletonTag(style, index, remove, obj) {\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = replaceText(index, css);\n    } else {\n        const cssNode = document.createTextNode(css);\n        const childNodes = style.childNodes;\n        if (childNodes[index]) {\n            style.removeChild(childNodes[index]);\n        }\n        if (childNodes.length) {\n            style.insertBefore(cssNode, childNodes[index]);\n        } else {\n            style.appendChild(cssNode);\n        }\n    }\n}\nfunction applyToTag(style, _options, obj) {\n    let css = obj.css;\n    const media = obj.media;\n    const sourceMap = obj.sourceMap;\n    if (media) {\n        style.setAttribute(\"media\", media);\n    } else {\n        style.removeAttribute(\"media\");\n    }\n    if (sourceMap && typeof btoa !== \"undefined\") {\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n    }\n    // For old IE\n    /* istanbul ignore if  */ if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n    } else {\n        while(style.firstChild){\n            style.removeChild(style.firstChild);\n        }\n        style.appendChild(document.createTextNode(css));\n    }\n}\nlet singleton = null;\nlet singletonCounter = 0;\nfunction addStyle(obj, options) {\n    let style;\n    let update;\n    let remove;\n    if (options.singleton) {\n        const styleIndex = singletonCounter++;\n        style = singleton || (singleton = insertStyleElement(options));\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n    } else {\n        style = insertStyleElement(options);\n        update = applyToTag.bind(null, style, options);\n        remove = function() {\n            removeStyleElement(style);\n        };\n    }\n    update(obj);\n    return function updateStyle(newObj) {\n        if (newObj) {\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n                return;\n            }\n            update(obj = newObj);\n        } else {\n            remove();\n        }\n    };\n}\nmodule.exports = function(list, options) {\n    options = options || {};\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n    // tags it will allow on a page\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\n        options.singleton = isOldIE();\n    }\n    list = list || [];\n    let lastIdentifiers = modulesToDom(list, options);\n    return function update(newList) {\n        newList = newList || [];\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\n            return;\n        }\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            stylesInDom[index].references--;\n        }\n        const newLastIdentifiers = modulesToDom(newList, options);\n        for(let i = 0; i < lastIdentifiers.length; i++){\n            const identifier = lastIdentifiers[i];\n            const index = getIndexByIdentifier(identifier);\n            if (stylesInDom[index].references === 0) {\n                stylesInDom[index].updater();\n                stylesInDom.splice(index, 1);\n            }\n        }\n        lastIdentifiers = newLastIdentifiers;\n    };\n};\n\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ App; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_main_sass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/main.sass */ \"./styles/main.sass\");\n/* harmony import */ var _styles_main_sass__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_main_sass__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"./node_modules/next-themes/dist/index.module.js\");\n\n\n// Poder importar directamente sass es gracias a Next y su built-in sass que se configura en next.config\n\nfunction App(param) {\n    let { Component , pageProps  } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"/Users/crrrrrrrrrri/Development/Mis-Repos/ginvo-heaven/pages/_app.js\",\n            lineNumber: 8,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/crrrrrrrrrri/Development/Mis-Repos/ginvo-heaven/pages/_app.js\",\n        lineNumber: 7,\n        columnNumber: 5\n    }, this);\n}\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBNEI7QUFDNUIsd0dBQXdHO0FBQzdEO0FBRTVCLFNBQVNDLElBQUksS0FBd0IsRUFBRTtRQUExQixFQUFFQyxVQUFTLEVBQUVDLFVBQVMsRUFBRSxHQUF4QjtJQUMxQixxQkFDRSw4REFBQ0gsc0RBQWFBO2tCQUNaLDRFQUFDRTtZQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7O0FBRzlCLENBQUM7S0FOdUJGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3BhZ2VzL19hcHAuanM/ZTBhZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4uL3N0eWxlcy9tYWluLnNhc3MnXG4vLyBQb2RlciBpbXBvcnRhciBkaXJlY3RhbWVudGUgc2FzcyBlcyBncmFjaWFzIGEgTmV4dCB5IHN1IGJ1aWx0LWluIHNhc3MgcXVlIHNlIGNvbmZpZ3VyYSBlbiBuZXh0LmNvbmZpZ1xuaW1wb3J0IHsgVGhlbWVQcm92aWRlciB9IGZyb20gJ25leHQtdGhlbWVzJ1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSB7XG4gIHJldHVybiAoXG4gICAgPFRoZW1lUHJvdmlkZXI+XG4gICAgICA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+XG4gICAgPC9UaGVtZVByb3ZpZGVyPlxuICApXG59XG4iXSwibmFtZXMiOlsiVGhlbWVQcm92aWRlciIsIkFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/_app.js\n"));

/***/ }),

/***/ "./node_modules/react/cjs/react-jsx-dev-runtime.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/react/cjs/react-jsx-dev-runtime.development.js ***!
  \*********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n\nvar jsxDEV$1 =  jsxWithValidation ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV$1;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "./node_modules/react/jsx-dev-runtime.js":
/*!***********************************************!*\
  !*** ./node_modules/react/jsx-dev-runtime.js ***!
  \***********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"./node_modules/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSx1SkFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2pzeC1kZXYtcnVudGltZS5qcz81Nzc3Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1qc3gtZGV2LXJ1bnRpbWUucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLmRldmVsb3BtZW50LmpzJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react/jsx-dev-runtime.js\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=private-next-pages%2F_app&page=%2F_app!"), __webpack_exec__("./node_modules/next/dist/client/router.js"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);